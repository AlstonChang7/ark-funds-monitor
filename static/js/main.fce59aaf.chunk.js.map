{"version":3,"sources":["services/ticker-service.js","components/header/header.js","components/most-active-stocks-tabs/stock-card/stock-card.js","components/most-active-stocks-tabs/most-active-stocks-tabs.js","components/data-grid/data-grid.js","components/stock-figure/stock-figure.js","layout.js","serviceWorker.js","index.js"],"names":["tickerSubject","Subject","tickerService","ticker","next","asObservable","Header","props","state","inputTicker","handleChange","bind","handleBlur","handleSubmit","handlingComposition","handleComposition","isCompositionEnd","this","tickerSubscription","subscribe","setState","unsubscribe","e","event","target","value","trim","toUpperCase","preventDefault","className","Grid","container","spacing","justify","alignItems","item","xs","md","href","height","width","src","alt","title","onSubmit","FormControl","Input","id","onCompositionStart","onCompositionUpdate","onCompositionEnd","onChange","onBlur","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","color","React","Component","StockCard","data","Card","CardContent","Typography","handleClickTicker","gutterBottom","name","variant","component","CardActions","Button","size","arkData","require","MostActiveStocksTabs","handleTabChange","newTabIndex","tabIndex","mostActiveStocks","mostBuyStocks","mostSellStocks","initCardsData","hash","rslt","tran","Ticker","push","Name","noOfSell","noOfBuy","noOfTransactions","directionSymbols","transactionsDetails","stock","find","x","Direction","unshift","sort","a","b","splice","Tabs","orientation","Tab","label","a11yProps","TabPanel","index","map","el","key","children","other","role","hidden","aria-labelledby","Box","p","rawData","Array","prototype","swapElements","DataGrid","window","innerWidth","innerHeight","updateWindowDimensions","columnDefs","Object","keys","massageRawData","genericColDef","field","specificColDef","minWidth","assign","tempData","_","addEventListener","removeEventListener","dataGridDef","defaultColDef","resizable","sortable","filter","floatingFilter","getColumnDefs","rowData","join","paginationAutoPageSize","pagination","onRowClicked","StockFigure","nextProps","categoryData","values","volumes","i","length","dayCount","result","len","sum","j","Math","round","splitData","console","log","option","backgroundColor","text","left","textStyle","fontSize","tooltip","trigger","axisPointer","animation","type","lineStyle","opacity","legend","inactiveColor","top","link","xAxisIndex","toolbox","show","feature","dataZoom","yAxisIndex","brush","visualMap","seriesIndex","dimension","pieces","grid","right","bottom","xAxis","scale","boundaryGap","axisLine","onZero","splitLine","splitNumber","min","max","axisLabel","gridIndex","axisTick","yAxis","splitArea","start","end","handleIcon","handleSize","dataBackground","areaStyle","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","itemStyle","color0","borderColor","borderColor0","markPoint","normal","formatter","param","valueDim","symbolOffset","coord","markLine","symbol","symbolSize","emphasis","calculateMA","smooth","filteredArkData","groupMap","date","dataArrayInDate","dataInProps","m","Date","buyCount","sellCount","pointText","subComponent","getOption","notMerge","lazyUpdate","style","viewBox","fill","xmlns","d","Layout","expanded","massagedData","figureTitle","isInputing","handlePanelChange","getCandleData","that","endDate","setHours","getCandleUrl","apiParams","resolution","from","to","token","paramsArray","prop","fetch","method","then","response","json","s","massaged","t","row","toISOString","split","o","c","l","h","v","catch","error","panel","isExpanded","panelArr","indexOf","Accordion","includes","AccordionSummary","expandIcon","aria-controls","AccordionDetails","packageJson","version","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2y4DAEMA,G,OAAgB,I,OAAIC,GAAQ,KAErBC,EACK,SAAAC,GAAM,OAAIH,EAAcI,KAAKD,IADlCD,EAGE,kBAAMF,EAAcK,gB,+DCuGpBC,G,yDAnGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,YAAa,IAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAC3B,EAAKI,kBAAoB,EAAKA,kBAAkBJ,KAAvB,gBACzB,EAAKK,kBAAmB,EAVT,E,gEAcE,IAAD,OAChBC,KAAKC,mBAAqBhB,IAA0BiB,WAAU,SAAAhB,GACtDA,EACA,EAAKiB,SAAS,CAAEX,YAAaN,IAE7B,EAAKiB,SAAS,CAAEjB,OAAQ,U,6CAMhCc,KAAKC,mBAAmBG,gB,4CAIxBJ,KAAKD,kBAAmB,I,wCAGVM,GACdL,KAAKD,kBAAmB,I,mCAGfO,GACLN,KAAKD,kBACLC,KAAKG,SAAS,CAAEX,YAAac,EAAMC,OAAOC,MAAMC,OAAOC,kB,iCAIpDJ,GACPN,KAAKD,kBAAmB,I,mCAGfO,GACTrB,EAA2Be,KAAKT,MAAMC,aACtCc,EAAMK,mB,+BAIN,OACI,yBAAKC,UAAU,kBACX,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACpD,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIR,UAAU,mBAChC,0BAAMA,UAAU,QACZ,uBAAGS,KAAK,8CACJ,yBAAKC,OAAO,KAAKC,MAAM,MAAMC,IAAI,oEAAoEC,IAAI,gBAAgBC,MAAM,OAGvI,0BAAMd,UAAU,SAAhB,sBAGJ,kBAACC,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGR,UAAU,wBAC/B,0BAAMe,SAAU3B,KAAKJ,cACjB,kBAACgC,EAAA,EAAD,KACI,6BACI,kBAACC,EAAA,EAAD,CACIC,GAAG,mBACHtB,MAAOR,KAAKT,MAAMC,YAClBuC,mBAAoB/B,KAAKH,oBACzBmC,oBAAqBhC,KAAKH,oBAC1BoC,iBAAkBjC,KAAKF,kBACvBoC,SAAUlC,KAAKP,aACf0C,OAAQnC,KAAKL,WACbyC,YAAY,SACZC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACrB,kBAACC,EAAA,EAAD,CACIC,aAAW,SACXC,QAAS1C,KAAKJ,aACd+C,KAAK,OAEL,kBAAC,IAAD,CAAYC,MAAM,0B,GArFjDC,IAAMC,Y,0FC2CZC,G,yDAzCX,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAIDA,MAAQA,EALE,E,8DAQDgB,GACdrB,EAA2Be,KAAKV,MAAM0D,KAAK9D,U,+BAI3C,OACI,yBAAK0B,UAAU,sBACX,kBAACqC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYvC,UAAU,cAAc8B,QAAS1C,KAAKoD,kBAAkB1D,KAAKM,OAChEA,KAAKV,MAAM0D,KAAK9D,QAErB,kBAACiE,EAAA,EAAD,CAAYvC,UAAU,iBAAiBgC,MAAM,gBAAgBS,cAAY,GACpErD,KAAKV,MAAM0D,KAAKM,MAKrB,kBAACH,EAAA,EAAD,CAAYI,QAAQ,QAAQC,UAAU,KAAtC,2BAEd,6BACmB,yBAGT,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,SAAb,qB,GAlCAd,IAAMC,YCF1Bc,EAAUC,EAAQ,KAsGPC,E,kDAnGX,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IA4DVyE,gBAAkB,SAACzD,EAAO0D,GACtB,EAAK7D,SAAS,CAAE8D,SAAUD,KA5D1B,EAAKzE,MAAQ,CACT0E,SAAU,EACVC,iBAAkB,GAClBC,cAAe,GACfC,eAAgB,IAEpB,EAAKL,gBAAkB,EAAKA,gBAAgBrE,KAArB,gBACvB,EAAK2E,cAAcT,GATJ,E,0DAYLA,GAWV,IAXmB,EAWfU,EAAO,GACPC,EAAO,GAZQ,cAaFX,GAbE,yBAaVY,EAbU,QAcVF,EAAKE,EAAKC,QAYXH,EAAKE,EAAKC,WAXVH,EAAKE,EAAKC,QAAU,EACpBF,EAAKG,KAAK,CACNxF,OAAQsF,EAAKC,OACbnB,KAAMkB,EAAKG,KACXC,SAAU,EACVC,QAAS,EACTC,iBAAkB,EAClBC,iBAAkB,GAClBC,oBAAqB,MAM7B,IAAMC,EAAQV,EAAKW,MAAK,SAAAC,GAAC,OAAIA,EAAEjG,SAAWsF,EAAKC,UACxB,QAAnBD,EAAKY,UACLH,EAAMJ,UACoB,SAAnBL,EAAKY,WACZH,EAAML,WAEVK,EAAMH,mBACNG,EAAMF,iBAAiBM,QAAQb,EAAKY,WACpCH,EAAMD,oBAAoBN,KAAKF,IAxBnC,2BAA2B,IAbR,8BA0CnBxE,KAAKT,MAAM2E,iBAAmBK,EAAKe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEV,iBAAmBS,EAAET,oBAAkBW,OAAO,EAF3E,GAIvBzF,KAAKT,MAAM4E,cAAgBI,EAAKe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,QAAUU,EAAEV,WAASY,OAAO,EAJtD,GAMvBzF,KAAKT,MAAM6E,eAAiBG,EAAKe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEZ,SAAWW,EAAEX,YAAUa,OAAO,EANzD,K,+BAcvB,OACI,yBAAK7E,UAAU,mCACX,kBAAC8E,EAAA,EAAD,CACIC,YAAY,WACZpC,QAAQ,aACR/C,MAAOR,KAAKT,MAAM0E,SAClB/B,SAAUlC,KAAK+D,gBACftB,aAAW,yBAEX,kBAACmD,EAAA,EAAD,eAAKC,MAAM,eAAkBC,EAAU,KACvC,kBAACF,EAAA,EAAD,eAAKC,MAAM,YAAeC,EAAU,KACpC,kBAACF,EAAA,EAAD,eAAKC,MAAM,aAAgBC,EAAU,MAEzC,kBAACC,EAAD,CAAUvF,MAAOR,KAAKT,MAAM0E,SAAU+B,MAAO,GACxChG,KAAKT,MAAM2E,iBAAiB+B,KAAI,SAAAC,GAAE,OAC/B,kBAAC,EAAD,CAAWC,IAAKD,EAAGhH,OAAQ8D,KAAMkD,QAGzC,kBAACH,EAAD,CAAUvF,MAAOR,KAAKT,MAAM0E,SAAU+B,MAAO,GACxChG,KAAKT,MAAM4E,cAAc8B,KAAI,SAAAC,GAAE,OAC5B,kBAAC,EAAD,CAAWC,IAAKD,EAAGhH,OAAQ8D,KAAMkD,QAGzC,kBAACH,EAAD,CAAUvF,MAAOR,KAAKT,MAAM0E,SAAU+B,MAAO,GACxChG,KAAKT,MAAM6E,eAAe6B,KAAI,SAAAC,GAAE,OAC7B,kBAAC,EAAD,CAAWC,IAAKD,EAAGhH,OAAQ8D,KAAMkD,a,GA5FtBrD,IAAMC,WAsGzC,SAASiD,EAASzG,GAAQ,IACd8G,EAAqC9G,EAArC8G,SAAU5F,EAA2BlB,EAA3BkB,MAAOwF,EAAoB1G,EAApB0G,MAAUK,EADd,YACwB/G,EADxB,8BAGrB,OACI,uCACIgH,KAAK,WACLC,OAAQ/F,IAAUwF,EAClBlE,GAAE,4BAAuBkE,GACzBQ,kBAAA,uBAAiCR,IAC7BK,GAEH7F,IAAUwF,GACP,kBAACS,EAAA,EAAD,CAAKC,EAAG,EAAG9F,UAAU,6BACjB,yBAAKA,UAAU,iBAAiBwF,KAapD,SAASN,EAAUE,GACf,MAAO,CACHlE,GAAG,gBAAD,OAAkBkE,GACpB,gBAAgB,qBAAhB,OAAsCA,I,oDCjI1CW,G,OAAU9C,EAAQ,MAGtB+C,MAAMC,UAAUC,aAAe,SAAUvB,EAAGC,GAExC,OADAxF,KAAKuF,GAAKvF,KAAKyF,OAAOD,EAAG,EAAGxF,KAAKuF,IAAI,GAC9BvF,M,IA4HI+G,E,kDAxHX,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgC,MAAOyF,OAAOC,WACd3F,OAAQ0F,OAAOE,aAEnB,EAAKC,uBAAyB,EAAKA,uBAAuBzH,KAA5B,gBANf,E,0DASLiH,GAAU,IAAD,OACbS,EAAa,GA6CnB,OA5C2BC,OAAOC,KAAKtH,KAAKuH,eAAeZ,GAAS,IAAIG,aAAa,EAAG,GAErEb,KAAI,SAAAd,GACnB,IAAIqC,EAAgB,CAChBC,MAAOtC,GAEPuC,EAAiB,GACrB,OAAQvC,GACJ,IAAK,OACDuC,EAAiB,CACbnG,MAAO,EAAKhC,MAAMgC,MAAQ,GAC1BoG,SAAU,KAEd,MACJ,IAAK,YACL,IAAK,QACL,IAAK,SACL,IAAK,WACDD,EAAiB,CACbnG,MAAO,EAAKhC,MAAMgC,MAAQ,GAC1BoG,SAAU,KAEd,MACJ,IAAK,OACL,IAAK,SACDD,EAAiB,CACbnG,MAAO,EAAKhC,MAAMgC,MAAQ,GAC1BoG,SAAU,IAEd,MACJ,IAAK,OACDD,EAAiB,CACbnG,MAAO,EAAKhC,MAAMgC,MAAQ,GAE9B,MACJ,QACImG,EAAiB,CACbnG,MAAO,EAAKhC,MAAMgC,MAAQ,EAC1BoG,SAAU,KAItBP,EAAW1C,KAAK2C,OAAOO,OAAOJ,EAAeE,OAE1CN,I,qCAGIT,GACX,IAAIkB,EAAWC,YAAYnB,GAU3B,OAPAkB,EAAS5B,KAAI,SAAAd,GACT,IAAK,IAAIgB,KAAOhB,EACA,KAARgB,UACOhB,EAAEgB,MAId0B,I,0CAIP7H,KAAKmH,yBACLH,OAAOe,iBAAiB,SAAU/H,KAAKmH,0B,6CAIvCH,OAAOgB,oBAAoB,SAAUhI,KAAKmH,0B,+CAI1CnH,KAAKG,SAAS,CAAEoB,MAAOyF,OAAOC,WAAY3F,OAAQ0F,OAAOE,gB,mCAGhD7G,GACLA,GAAKA,EAAE2C,MAAQ3C,EAAE2C,KAAKyB,QACtBxF,EAA2BoB,EAAE2C,KAAKyB,U,+BAKtC,IAAMwD,EAAc,CAChBC,cAAe,CACXC,WAAW,EACXC,UAAU,EACVC,OAAQ,qBACRC,gBAAgB,GAEpBlB,WAAYpH,KAAKuI,cAAc5B,GAC/B6B,QAASxI,KAAKuH,eAAeZ,IAEjC,OACI,kBAAC9F,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASC,WAAW,UACxC,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIP,UAAW,CAAC,kBAAmB,UAAU6H,KAAK,MAC7D,kBAAC,cAAD,CACID,QAASP,EAAYO,QACrBpB,WAAYa,EAAYb,WACxBc,cAAeD,EAAYC,cAC3BQ,wBAAwB,EACxBC,YAAY,EACZC,aAAc5I,KAAK4I,aAAalJ,KAAKM,c,GAhHtC6C,IAAMC,W,2BChBzBc,EAAUC,EAAQ,KAydPgF,E,kDAjdX,WAAYvJ,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEiB,MAAO,IACtB,EAAKlB,MAAQA,EAHE,E,kEAMGwJ,GAClB,OAAO9I,KAAKV,MAAM0D,OAAS8F,EAAU9F,O,gCAG/B2D,GAKN,IAJA,IAAIoC,EAAe,GACfC,EAAS,GACTC,EAAU,GAELC,EAAI,EAAGA,EAAIvC,EAAQwC,OAAQD,IAChCH,EAAarE,KAAKiC,EAAQuC,GAAGzD,OAAO,EAAG,GAAG,IAC1CuD,EAAOtE,KAAKiC,EAAQuC,IACpBD,EAAQvE,KAAK,CAACwE,EAAGvC,EAAQuC,GAAG,GAAIvC,EAAQuC,GAAG,GAAKvC,EAAQuC,GAAG,GAAK,GAAK,IAEzE,MAAO,CACHH,aAAcA,EACdC,OAAQA,EACRC,QAASA,K,kCAILG,GAER,IADA,IAAIC,EAAS,GACJH,EAAI,EAAGI,EAAMtJ,KAAKgD,KAAKgG,OAAOG,OAAQD,EAAII,EAAKJ,IACpD,GAAIA,EAAIE,EACJC,EAAO3E,KAAK,SADhB,CAKA,IADA,IAAI6E,EAAM,EACDC,EAAI,EAAGA,EAAIJ,EAAUI,IAC1BD,GAAOvJ,KAAKgD,KAAKgG,OAAOE,EAAIM,GAAG,GAEnCH,EAAO3E,KAAK+E,KAAKC,MAAMH,EAAMH,EAAW,KAAO,KAEnD,OAAOC,I,kCAIE,IAAD,OACRrJ,KAAKgD,KAAOhD,KAAK2J,UAAU7B,YAAY9H,KAAKV,MAAM0D,OAClD4G,QAAQC,IAAI7J,KAAKgD,MACjB,IAAI8G,EAAS,CACTC,gBAAiB,OACjBrI,MAAO,CACHsI,KAAMhK,KAAKV,MAAMoC,MACjBuI,KAAM,KACNC,UAAW,CACPtH,MAAO,OACPuH,SAAU,KAGlBC,QAAS,CACLC,QAAS,OACTC,YAAa,CACTC,WAAW,EACXC,KAAM,QACN3E,MAAO,CACHsE,SAAU,IAEdM,UAAW,CACP7H,MAAO,UACPrB,MAAO,EACPmJ,QAAS,IAGjBR,UAAW,CACPC,SAAU,KAGlBQ,OAAQ,CACJ3H,KAAM,CAAC,MAAO,MAAO,OAAQ,QAC7B4H,cAAe,OACfV,UAAW,CACPtH,MAAO,OACPuH,SAAU,IAEdU,IAAK,MAETP,YAAa,CACTQ,KAAM,CAAEC,WAAY,OACpBlF,MAAO,CACHkE,gBAAiB,SAGzBiB,QAAS,CACLC,MAAM,EACNC,QAAS,CACLC,SAAU,CACNC,YAAY,GAEhBC,MAAO,CACHb,KAAM,CAAC,QAAS,YAI5Bc,UAAW,CACPL,MAAM,EACNM,YAAa,EACbC,UAAW,EACXC,OAAQ,CAAC,CACLjL,MAAO,EACPoC,MAjHJ,WAkHG,CACCpC,OAAQ,EACRoC,MAlHN,aAqHF8I,KAAM,CACF,CACIzB,KAAM,KACN0B,MAAO,KACPC,OAAQ,OAEZ,CACI3B,KAAM,KACN0B,MAAO,KACPrK,OAAQ,MACRsK,OAAQ,QAGhBC,MAAO,CACH,CACIrB,KAAM,WACNxH,KAAMhD,KAAKgD,KAAK+F,aAChB+C,OAAO,EACPC,aAAa,EACbC,SAAU,CAAEC,QAAQ,EAAOxB,UAAW,CAAE7H,MAAO,SAC/CsJ,UAAW,CAAEjB,MAAM,GACnBkB,YAAa,GACbC,IAAK,UACLC,IAAK,UACLC,UAAW,CACPrB,MAAM,EACNf,UAAW,CACPC,SAAU,MAItB,CACIK,KAAM,WACN+B,UAAW,EACXvJ,KAAMhD,KAAKgD,KAAK+F,aAChB+C,OAAO,EACPC,aAAa,EACbC,SAAU,CAAEC,QAAQ,EAAOxB,UAAW,CAAE7H,MAAO,YAC/C4J,SAAU,CAAEvB,MAAM,GAClBiB,UAAW,CAAEjB,MAAM,GACnBqB,UAAW,CAAErB,MAAM,GACnBkB,YAAa,GACbC,IAAK,UACLC,IAAK,YAGbI,MAAO,CAAC,CACJX,OAAO,EACPY,UAAW,CACPzB,MAAM,GAEVe,SAAU,CAAEvB,UAAW,CAAE7H,MAAO,SAChCsJ,UAAW,CAAEjB,MAAM,GACnBqB,UAAW,CACPrB,MAAM,EACNf,UAAW,CACPC,SAAU,MAItB,CACI2B,OAAO,EACPS,UAAW,EACXJ,YAAa,EACbG,UAAW,CAAErB,MAAM,GACnBe,SAAU,CAAEf,MAAM,EAAOR,UAAW,CAAE7H,MAAO,SAC7C4J,SAAU,CAAEvB,MAAM,GAClBiB,UAAW,CAAEjB,MAAM,KAGvBE,SAAU,CACN,CACIX,KAAM,SACNmC,MAAO,EACPC,IAAK,KAET,CACI3B,MAAM,EACNT,KAAM,SACNoB,OAAQ,KACRe,MAAO,EACPC,IAAK,IACL1C,UAAW,CACPtH,MAAO,WAEXiK,WAAY,qMACZC,WAAY,MACZC,eAAgB,CACZC,UAAW,CACPpK,MAAO,WAEX6H,UAAW,CACPC,QAAS,GACT9H,MAAO,YAGfqK,YAAa,CACTrK,MAAO,OACPsK,WAAY,EACZC,YAAa,qBACbC,cAAe,EACfC,cAAe,KAI3BC,OAAQ,CACJ,CACIhK,KAAM,MACNkH,KAAM,cACNxH,KAAMhD,KAAKgD,KAAKgG,OAChBuE,UAAW,CACP3K,MApOV,UAqOU4K,OAvOR,UAwOQC,YArOJ,UAsOIC,aAxOF,WA0OFC,UACA,CACI9H,MAAO,CACH+H,OAAQ,CACJC,UAAW,SAAUC,GACjB,GAAuB,kBAAXA,EACR,OAAgB,MAATA,EAAgBrE,KAAKC,MAAMoE,EAAMtN,OAAS,MAKjEwC,KAAM,CACF,CACIM,KAAM,gBACNkH,KAAM,MACNuD,SAAU,UACVC,aAAc,CAAC,GAAI,KAEvB,CACI1K,KAAM,eACNkH,KAAM,MACNuD,SAAU,SACVC,aAAc,CAAC,GAAI,KAEvB,CACI1K,KAAM,yBACNkH,KAAM,UACNuD,SAAU,QACVC,aAAc,CAAC,GAAI,MAG3B5D,QAAS,CACLyD,UAAY,SAACC,GAAD,OAAWA,EAAMxK,KAAO,QAAUwK,EAAM9K,KAAKiL,OAAS,OAG1EC,SAAU,CACNC,OAAQ,CAAC,OAAQ,QACjB1D,UAAW,CACP7H,MAjRZ,WAmRQI,KAAM,CACF,CACI,CACIM,KAAM,yBACNkH,KAAM,MACNuD,SAAU,SACVI,OAAQ,SACRC,WAAY,GACZvI,MAAO,CACHoF,MAAM,GAEVoD,SAAU,CACNxI,MAAO,CACHoF,MAAM,KAIlB,CACIT,KAAM,MACNuD,SAAU,UACVI,OAAQ,SACRC,WAAY,GACZvI,MAAO,CACHoF,MAAM,GAEVoD,SAAU,CACNxI,MAAO,CACHoF,MAAM,MAKtB,CACI3H,KAAM,oBACNkH,KAAM,MACNuD,SAAU,SAEd,CACIzK,KAAM,oBACNkH,KAAM,MACNuD,SAAU,YAK1B,CACIzK,KAAM,MACNkH,KAAM,OACNxH,KAAMhD,KAAKsO,YAAY,GACvBC,QAAQ,EACR9D,UAAW,CACPC,QAAS,IAEb6C,UAAW,CACP3K,MAAO,YAGf,CACIU,KAAM,OACNkH,KAAM,OACNxH,KAAMhD,KAAKsO,YAAY,IACvBC,QAAQ,EACR9D,UAAW,CACPC,QAAS,IAEb6C,UAAW,CACP3K,MAAO,YAGf,CACIU,KAAM,OACNkH,KAAM,OACNxH,KAAMhD,KAAKsO,YAAY,IACvBC,QAAQ,EACR9D,UAAW,CACPC,QAAS,IAEb6C,UAAW,CACP3K,MAAO,YAYf,CACIU,KAAM,SACNkH,KAAM,MACNO,WAAY,EACZK,WAAY,EACZpI,KAAMhD,KAAKgD,KAAKiG,WAOtBuF,EAAkB5K,EAAQyE,QAAO,SAAAlD,GAAC,OAAIA,EAAEV,SAAW,EAAKnF,MAAMoC,SACpE,IAAK8M,GAA8C,IAA3BA,EAAgBrF,OACpC,OAAOW,EAGX,IAAM2E,EAAW3G,UAAU0G,EAAiB,QA5UpC,WA6UCE,GACL,IAAMC,EAAkBF,EAASC,GAC3BE,EAAc,EAAKtP,MAAM0D,KAAKkC,MAAK,SAAA2J,GAAC,OAAIA,EAAE,KAAOF,EAAgB,GAAGG,QAC1E,IAAMF,IAAeA,EAAY,GAC7B,iBAGJ,IAAMG,EAAWJ,EAAgBtG,QAAO,SAAAlD,GAAC,MAAoB,QAAhBA,EAAEC,aAAqB+D,OAC9D6F,EAAYL,EAAgBxF,OAAS4F,EAE3C,GAAiB,IAAbA,GAAgC,IAAdC,EAAiB,CACnC,IAAIC,EAAY,GACC,IAAbF,EACAE,EAA0B,IAAdD,EAAA,UACHL,EAAgB,GAAGvJ,WADhB,iBAEI4J,GACK,IAAdA,IACPC,EAAyB,IAAbF,EAAA,UACHJ,EAAgB,GAAGvJ,WADhB,gBAEG2J,IAGnBjF,EAAOwD,OAAO,GAAGK,UAAU3K,KAAK0B,KAAK,CACjCpB,KAAK,GAAD,OAAKqL,EAAgB,GAAGG,KAAxB,YAAgCH,EAAgB,GAAGvJ,WACvD6I,MAAO,CAACU,EAAgB,GAAGG,KAAMF,EAAY,IAC7CpO,MAAOyO,EACP1B,UAAW,CACP3K,MAAoB,IAAbmM,EACD,gBACA,4BAKdjF,EAAOwD,OAAO,GAAGK,UAAU3K,KAAK0B,KAAK,CACjCpB,KAAK,GAAD,OAAKqL,EAAgB,GAAGG,KAAxB,QACJb,MAAO,CAACU,EAAgB,GAAGG,KAAMF,EAAY,IAC7CpO,MAAM,SAAD,OAAWuO,GAChBxB,UAAW,CACP3K,MAAO,uBAIfkH,EAAOwD,OAAO,GAAGK,UAAU3K,KAAK0B,KAAK,CACjCpB,KAAK,GAAD,OAAKqL,EAAgB,GAAGG,KAAxB,SACJb,MAAO,CAACU,EAAgB,GAAGG,KAAuB,IAAjBF,EAAY,IAC7CpO,MAAM,SAAD,OAAWwO,GAChBzB,UAAW,CACP3K,MAAO,oBAhDvB,IAAK,IAAI8L,KAAQD,EAAU,EAAlBC,GAqDT,OAAO5E,I,+BAIP,IAAIoF,EAuBJ,OArBIA,EADAlP,KAAKV,MAAM0D,KAAKmG,OAAS,EACV,kBAAC,IAAD,CACXW,OAAQ9J,KAAKmP,YACbC,UAAU,EACVC,YAAY,EACZC,MAAO,CAAEhO,OAAQ,QAASC,MAAO,UAIjC,yBAAKX,UAAU,qBACX,qEAEI,6BAFJ,wCAKA,yBAAKW,MAAM,MAAMD,OAAO,MAAMiO,QAAQ,YAAY3O,UAAU,4BAA4B4O,KAAK,eAAeC,MAAM,8BAC9G,0BAAMC,EAAE,2HACR,0BAAMA,EAAE,4HAMpB,6BACKR,O,GA5cSrM,IAAMC,WCK5Bc,EAAUC,EAAQ,KAyJP8L,E,kDAtJX,WAAYrQ,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTqQ,SAAU,CAAC,0BAA2B,2BACtCpQ,YAAa,GACbqQ,aAAc,GACdC,YAAa,GACbC,YAAY,GAGhB,EAAKC,kBAAoB,EAAKA,kBAAkBtQ,KAAvB,gBAVV,E,gEAaE,IAAD,OAChBM,KAAKC,mBAAqBhB,IAA0BiB,WAAU,SAAAhB,GACtDA,GACA,EAAKiB,SAAS,CAAEX,YAAaN,IAC7B,EAAK+Q,cAAc/Q,IAEnB,EAAKiB,SAAS,CAAEjB,OAAQ,U,6CAMhCc,KAAKC,mBAAmBG,gB,oCAGdlB,GAAS,IAAD,OACdgR,EAAOlQ,KACPmQ,GAAU,IAAIrB,MAAOsB,SAAS,EAAG,EAAG,EAAG,GAAK,IAE5CC,EAAe,0CAEbC,EAAY,CACdnC,OAAQjP,EACRqR,WAAY,IACZC,KANYL,EAAU,OAOtBM,GAAIN,EACJO,MAAO,wBAEPC,EAAc,GAClB,IAAK,IAAIC,KAAQN,EACbK,EAAYjM,KAAZ,UAAoBkM,EAApB,YAA4BN,EAAUM,KAE1CP,GAA8BM,EAAYlI,KAAK,KAE/CoI,MAAMR,EAAc,CAChBS,OAAQ,QAEPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAC/N,GACH,GAAIA,GAAmB,OAAXA,EAAKkO,EAAY,CAEzB,IADA,IAAIC,EAAW,GACNjI,EAAI,EAAGA,EAAIlG,EAAKoO,EAAEjI,OAAQD,IAAK,CACpC,IAAImI,EAAM,GACVA,EAAI3M,KACA,IAAIoK,KAAiB,IAAZ9L,EAAKoO,EAAElI,IAAWoI,cACtBC,MAAM,KAAK,GAChB9H,KAAKC,MAAkB,IAAZ1G,EAAKwO,EAAEtI,IAAY,IAC9BO,KAAKC,MAAkB,IAAZ1G,EAAKyO,EAAEvI,IAAY,IAC9BO,KAAKC,MAAkB,IAAZ1G,EAAK0O,EAAExI,IAAY,IAC9BO,KAAKC,MAAkB,IAAZ1G,EAAK2O,EAAEzI,IAAY,IAC9BlG,EAAK4O,EAAE1I,IAEXiI,EAASzM,KAAK2M,GAGlBnB,EAAK/P,SAAS,CAAE2P,YAAa5Q,IAC7BgR,EAAK/P,SAAS,CAAE0P,aAAcsB,QAGrCU,OAAM,SAAAC,GAAK,OAAI,EAAK3R,SAAS,CAAE2R,e,wCAItBC,GAAQ,IAAD,OACrB,OAAO,SAACzR,EAAO0R,GAEX,IAAMC,EAAW,EAAK1S,MAAMqQ,SAC5B,GAAIoC,EACAC,EAASvN,KAAKqN,OACX,CACH,IAAM/L,EAAQiM,EAASC,QAAQH,GAC3B/L,GAAS,GACTiM,EAASxM,OAAOO,EAAO,GAG/B,EAAK7F,SAAS,CAAEyP,SAAUqC,O,+BAK9B,OACI,yBAAKrR,UAAU,kBACX,yBAAKA,UAAU,kBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qBACX,kBAACuR,EAAA,EAAD,CAAWvC,SAAU5P,KAAKT,MAAMqQ,SAASwC,SAAS,2BAA4BlQ,SAAUlC,KAAKgQ,kBAAkB,4BAC3G,kBAACqC,EAAA,EAAD,CACIC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kCACdzQ,GAAG,kCACH,kBAACqB,EAAA,EAAD,CAAYvC,UAAU,qBAAtB,iCACA,kBAACuC,EAAA,EAAD,CAAYvC,UAAU,4BAAtB,0DAEJ,kBAAC4R,EAAA,EAAD,KACI,yBAAK5R,UAAU,mCACX,kBAAC,EAAD,SAIZ,kBAACuR,EAAA,EAAD,CAAWvC,SAAU5P,KAAKT,MAAMqQ,SAASwC,SAAS,mBAAoBlQ,SAAUlC,KAAKgQ,kBAAkB,oBACnG,kBAACqC,EAAA,EAAD,CACIC,WAAY,kBAAC,IAAD,MACZC,gBAAc,0BACdzQ,GAAG,0BACH,kBAACqB,EAAA,EAAD,CAAYvC,UAAU,qBAAtB,0BACA,kBAACuC,EAAA,EAAD,CAAYvC,UAAU,4BAAtB,sDAEJ,kBAAC4R,EAAA,EAAD,KACI,kBAAC,EAAD,QAGR,kBAACL,EAAA,EAAD,CAAWvC,SAAU5P,KAAKT,MAAMqQ,SAASwC,SAAS,2BAA4BlQ,SAAUlC,KAAKgQ,kBAAkB,4BAC3G,kBAACqC,EAAA,EAAD,CACIC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kCACdzQ,GAAG,kCACH,kBAACqB,EAAA,EAAD,CAAYvC,UAAU,qBAAtB,qBACA,kBAACuC,EAAA,EAAD,CAAYvC,UAAU,4BAAtB,mDAEJ,kBAAC4R,EAAA,EAAD,KACI,yBAAK5R,UAAU,wBACX,kBAAC,EAAD,CAAac,MAAO1B,KAAKT,MAAMuQ,YAAYpP,cAAesC,KAAMhD,KAAKT,MAAMsQ,eAD/E,QAOZ,yBAAKjP,UAAU,kBACX,uBAAGA,UAAU,gBAAb,YAAsC6R,EAAYC,SAClD,uBAAG9R,UAAU,oBAAb,qBAAmDgD,EAAQ,GAAR,Y,GAhJlDf,IAAMC,WCPP6P,QACW,cAA7B3L,OAAO4L,SAASC,UAEe,UAA7B7L,OAAO4L,SAASC,UAEhB7L,OAAO4L,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEd3B,OAAM,SAAAC,GACLlI,QAAQkI,MAAMA,EAAM2B,c","file":"static/js/main.fce59aaf.chunk.js","sourcesContent":["import { Subject } from 'rxjs';\n\nconst tickerSubject = new Subject('');\n\nexport const tickerService = {\n    changeTicker: ticker => tickerSubject.next(ticker),\n    clearTicker: () => tickerSubject.next(),\n    getTicker: () => tickerSubject.asObservable()\n};","import React from 'react';\nimport {\n    Grid, Input, FormControl,\n    IconButton, InputAdornment,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './header.scss';\nimport { tickerService } from '../../services/ticker-service'\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputTicker: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlingComposition = this.handlingComposition.bind(this);\n        this.handleComposition = this.handleComposition.bind(this);\n        this.isCompositionEnd = true;\n\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ inputTicker: ticker });\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    handlingComposition() {\n        this.isCompositionEnd = false;\n    }\n\n    handleComposition(e) {\n        this.isCompositionEnd = true;\n    }\n\n    handleChange(event) {\n        if (this.isCompositionEnd) {\n            this.setState({ inputTicker: event.target.value.trim().toUpperCase() });\n        }\n    }\n\n    handleBlur(event) {\n        this.isCompositionEnd = true;\n    }\n\n    handleSubmit(event) {\n        tickerService.changeTicker(this.state.inputTicker);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"header-section\">\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={6} md={10} className='title-container'>\n                        <span className=\"logo\">\n                            <a href=\"http://IssueX.github.io/ark-funds-monitor/\">\n                                <img height=\"90\" width=\"120\" src=\"https://ark-funds.com/wp-content/uploads/2020/07/ark-logo-1-1.svg\" alt=\"ark-funds.com\" title=\"\" />\n                            </a>\n                        </span>\n                        <span className='title'>ARK Funds Monitor</span>\n                    </Grid>\n\n                    <Grid item xs={6} md={2} className=\"ticker-input-section\">\n                        <form onSubmit={this.handleSubmit}>\n                            <FormControl>\n                                <div>\n                                    <Input\n                                        id=\"ticker-textfield\"\n                                        value={this.state.inputTicker}\n                                        onCompositionStart={this.handlingComposition}\n                                        onCompositionUpdate={this.handlingComposition}\n                                        onCompositionEnd={this.handleComposition}\n                                        onChange={this.handleChange}\n                                        onBlur={this.handleBlur}\n                                        placeholder='Ticker'\n                                        endAdornment={\n                                            <InputAdornment position=\"start\">\n                                                <IconButton\n                                                    aria-label=\"Search\"\n                                                    onClick={this.handleSubmit}\n                                                    edge=\"end\"\n                                                >\n                                                    <SearchIcon color=\"primary\" />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </div>\n                            </FormControl>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n};\n\nexport default Header;","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport './stock-card.scss';\nimport { tickerService } from '../../../services/ticker-service';\n\nclass StockCard extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     inputTicker: ''\n        // };\n        this.props = props;\n    }\n\n    handleClickTicker(event) {\n        tickerService.changeTicker(this.props.data.ticker);\n    }\n\n    render() {\n        return (\n            <div className=\"stock-card-wrapper\">\n                <Card>\n                    <CardContent>\n                    <Typography className='card-ticker' onClick={this.handleClickTicker.bind(this)}>\n                            {this.props.data.ticker}\n                        </Typography>\n                        <Typography className='card-full-name' color=\"textSecondary\" gutterBottom>\n                            {this.props.data.name}\n                        </Typography>\n                        {/* <Typography className='haha' color=\"textSecondary\">\n                            adjective\n                        </Typography> */}\n                        <Typography variant=\"body2\" component=\"p\">\n                            well meaning and kindly.\n          <br />\n                            {'\"a benevolent smile\"'}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n};\n\nexport default StockCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport './most-active-stocks-tabs.scss';\nimport StockCard from './stock-card/stock-card';\n\nlet arkData = require('../../rawData/mergedData.json');\n\nclass MostActiveStocksTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tabIndex: 0,\n            mostActiveStocks: [],\n            mostBuyStocks: [],\n            mostSellStocks: []\n        };\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.initCardsData(arkData);\n    }\n\n    initCardsData(arkData) {\n        // for now, check all time data\n        // [{\n        // ticker: 'TSLA'\n        // name: Name\n        // noOfSell:\n        // noOfBuy:\n        // noOfTransactions: number:\n        // directionSymbol: []\n        // transactionsDetails: []\n        // }]\n        let hash = {};\n        let rslt = [];\n        for (let tran of arkData) {\n            if (!hash[tran.Ticker]) {\n                hash[tran.Ticker] = 1;\n                rslt.push({\n                    ticker: tran.Ticker,\n                    name: tran.Name,\n                    noOfSell: 0,\n                    noOfBuy: 0,\n                    noOfTransactions: 0,\n                    directionSymbols: [],\n                    transactionsDetails: []\n                })\n            } else {\n                hash[tran.Ticker]++;\n            }\n\n            const stock = rslt.find(x => x.ticker === tran.Ticker);\n            if (tran.Direction === 'Buy') {\n                stock.noOfBuy++;\n            } else if (tran.Direction === 'Sell') {\n                stock.noOfSell++;\n            }\n            stock.noOfTransactions++;\n            stock.directionSymbols.unshift(tran.Direction);\n            stock.transactionsDetails.push(tran);\n        }\n\n        const numberOfStocks = 5;\n        // eslint-disable-next-line\n        this.state.mostActiveStocks = rslt.sort((a, b) => b.noOfTransactions - a.noOfTransactions).splice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostBuyStocks = rslt.sort((a, b) => b.noOfBuy - a.noOfBuy).splice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostSellStocks = rslt.sort((a, b) => b.noOfSell - a.noOfSell).splice(0, numberOfStocks);\n    }\n\n    handleTabChange = (event, newTabIndex) => {\n        this.setState({ tabIndex: newTabIndex })\n    };\n\n    render() {\n        return (\n            <div className=\"most-active-stocks-tabs-section\">\n                <Tabs\n                    orientation=\"vertical\"\n                    variant=\"scrollable\"\n                    value={this.state.tabIndex}\n                    onChange={this.handleTabChange}\n                    aria-label=\"Vertical tabs example\"\n                >\n                    <Tab label=\"Most Active\" {...a11yProps(0)} />\n                    <Tab label=\"Most Buy\" {...a11yProps(1)} />\n                    <Tab label=\"Most Sell\" {...a11yProps(2)} />\n                </Tabs>\n                <TabPanel value={this.state.tabIndex} index={0}>\n                    {this.state.mostActiveStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} />\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={1}>\n                    {this.state.mostBuyStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} />\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={2}>\n                    {this.state.mostSellStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} />\n                    )}\n                </TabPanel>\n            </div>\n        );\n    }\n};\n\nexport default MostActiveStocksTabs;\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3} className=\"vertical-tabpanel-content\">\n                    <div className=\"cards-wrapper\">{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}","import React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\nimport * as _ from 'lodash';\nimport { Grid } from '@material-ui/core';\nimport './data-grid.scss';\n\nimport { tickerService } from '../../services/ticker-service'\n\nlet rawData = require('../../rawData/mergedData.json');\n\n// eslint-disable-next-line\nArray.prototype.swapElements = function (a, b) {\n    this[a] = this.splice(b, 1, this[a])[0];\n    return this;\n}\n\nclass DataGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    getColumnDefs(rawData) {\n        const columnDefs = [];\n        const columnNamesInOrder = Object.keys(this.massageRawData(rawData)[0]).swapElements(0, 1);\n        // eslint-disable-next-line\n        columnNamesInOrder.map(x => {\n            let genericColDef = {\n                field: x,\n            };\n            let specificColDef = {};\n            switch (x) {\n                case 'Date':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 130,\n                    }\n                    break\n                case 'Direction':\n                case 'CUSIP':\n                case 'Shares':\n                case '% Of ETF':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 100,\n                    }\n                    break\n                case 'FUND':\n                case 'Ticker':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 90,\n                    }\n                    break\n                case 'Name':\n                    specificColDef = {\n                        width: this.state.width / 4,\n                    }\n                    break\n                default:\n                    specificColDef = {\n                        width: this.state.width / 8,\n                        minWidth: 100,\n                    };\n                    break;\n            }\n            columnDefs.push(Object.assign(genericColDef, specificColDef));\n        })\n        return columnDefs;\n    }\n\n    massageRawData(rawData) {\n        let tempData = _.cloneDeep(rawData);\n        // remove empty property\n        // eslint-disable-next-line\n        tempData.map(x => {\n            for (let key in x) {\n                if (key === '') {\n                    delete x[key];\n                }\n            }\n        })\n        return tempData;\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    onRowClicked(e) {\n        if (e && e.data && e.data.Ticker) {\n            tickerService.changeTicker(e.data.Ticker);\n        }\n    }\n\n    render() {\n        const dataGridDef = {\n            defaultColDef: {\n                resizable: true,\n                sortable: true,\n                filter: 'agTextColumnFilter',\n                floatingFilter: true\n            },\n            columnDefs: this.getColumnDefs(rawData),\n            rowData: this.massageRawData(rawData)\n        }\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} className={['ag-theme-alpine', 'center'].join(' ')}>\n                    <AgGridReact\n                        rowData={dataGridDef.rowData}\n                        columnDefs={dataGridDef.columnDefs}\n                        defaultColDef={dataGridDef.defaultColDef}\n                        paginationAutoPageSize={true}\n                        pagination={true}\n                        onRowClicked={this.onRowClicked.bind(this)}\n                    >\n                    </AgGridReact>\n                </Grid>\n            </Grid>\n        );\n    }\n};\n\nexport default DataGrid;","import React from 'react';\nimport * as _ from 'lodash';\nimport './stock-figure.scss';\nimport ReactEcharts from 'echarts-for-react';\n\nlet arkData = require('../../rawData/mergedData.json');\n\nvar downColor = '#ec0000';\nvar downBorderColor = '#8A0000';\nvar upColor = '#00da3c';\nvar upBorderColor = '#008F28';\n\nclass StockFigure extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '' };\n        this.props = props;\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.data !== nextProps.data;\n    }\n\n    splitData(rawData) {\n        var categoryData = [];\n        var values = [];\n        var volumes = [];\n\n        for (var i = 0; i < rawData.length; i++) {\n            categoryData.push(rawData[i].splice(0, 1)[0]);\n            values.push(rawData[i]);\n            volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]);;\n        }\n        return {\n            categoryData: categoryData,\n            values: values,\n            volumes: volumes\n        };\n    }\n\n    calculateMA(dayCount) {\n        var result = [];\n        for (var i = 0, len = this.data.values.length; i < len; i++) {\n            if (i < dayCount) {\n                result.push('-');\n                continue;\n            }\n            var sum = 0;\n            for (var j = 0; j < dayCount; j++) {\n                sum += this.data.values[i - j][1];\n            }\n            result.push(Math.round(sum / dayCount * 100) / 100);\n        }\n        return result;\n    }\n\n\n    getOption() {\n        this.data = this.splitData(_.cloneDeep(this.props.data));\n        console.log(this.data)\n        let option = {\n            backgroundColor: '#fff',\n            title: {\n                text: this.props.title,\n                left: '5%',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 20\n                },\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    animation: false,\n                    type: 'cross',\n                    label: {\n                        fontSize: 16\n                    },\n                    lineStyle: {\n                        color: '#376df4',\n                        width: 2,\n                        opacity: 1\n                    }\n                },\n                textStyle: {\n                    fontSize: 16\n                }\n            },\n            legend: {\n                data: ['Day', 'MA5', 'MA10', 'MA20'],\n                inactiveColor: '#777',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 16\n                },\n                top: '1%',\n            },\n            axisPointer: {\n                link: { xAxisIndex: 'all' },\n                label: {\n                    backgroundColor: '#777'\n                }\n            },\n            toolbox: {\n                show: false,\n                feature: {\n                    dataZoom: {\n                        yAxisIndex: false\n                    },\n                    brush: {\n                        type: ['lineX', 'clear']\n                    }\n                }\n            },\n            visualMap: {\n                show: false,\n                seriesIndex: 4,\n                dimension: 2,\n                pieces: [{\n                    value: 1,\n                    color: downColor\n                }, {\n                    value: -1,\n                    color: upColor\n                }]\n            },\n            grid: [\n                {\n                    left: '5%',\n                    right: '5%',\n                    bottom: '30%'\n                },\n                {\n                    left: '5%',\n                    right: '5%',\n                    height: '15%',\n                    bottom: '10%'\n                }\n            ],\n            xAxis: [\n                {\n                    type: 'category',\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#000' } },\n                    splitLine: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax',\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            fontSize: 16\n                        }\n                    }\n                },\n                {\n                    type: 'category',\n                    gridIndex: 1,\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#8392A5' } },\n                    axisTick: { show: false },\n                    splitLine: { show: false },\n                    axisLabel: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax'\n                }\n            ],\n            yAxis: [{\n                scale: true,\n                splitArea: {\n                    show: true\n                },\n                axisLine: { lineStyle: { color: '#000' } },\n                splitLine: { show: false },\n                axisLabel: {\n                    show: true,\n                    textStyle: {\n                        fontSize: 16\n                    }\n                }\n            },\n            {\n                scale: true,\n                gridIndex: 1,\n                splitNumber: 2,\n                axisLabel: { show: false },\n                axisLine: { show: false, lineStyle: { color: '#000' } },\n                axisTick: { show: false },\n                splitLine: { show: false },\n            }\n            ],\n            dataZoom: [\n                {\n                    type: 'inside',\n                    start: 0,\n                    end: 100\n                },\n                {\n                    show: true,\n                    type: 'slider',\n                    bottom: '2%',\n                    start: 0,\n                    end: 100,\n                    textStyle: {\n                        color: '#8392A5'\n                    },\n                    handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                    handleSize: '80%',\n                    dataBackground: {\n                        areaStyle: {\n                            color: '#8392A5'\n                        },\n                        lineStyle: {\n                            opacity: 0.8,\n                            color: '#8392A5'\n                        }\n                    },\n                    handleStyle: {\n                        color: '#fff',\n                        shadowBlur: 3,\n                        shadowColor: 'rgba(0, 0, 0, 0.6)',\n                        shadowOffsetX: 2,\n                        shadowOffsetY: 2\n                    }\n                }\n            ],\n            series: [\n                {\n                    name: 'Day',\n                    type: 'candlestick',\n                    data: this.data.values,\n                    itemStyle: {\n                        color: upColor,\n                        color0: downColor,\n                        borderColor: upBorderColor,\n                        borderColor0: downBorderColor\n                    },\n                    markPoint:\n                    {\n                        label: {\n                            normal: {\n                                formatter: function (param) {\n                                    if (typeof (param) === 'number') {\n                                        return param != null ? Math.round(param.value) : '';\n                                    }\n                                }\n                            }\n                        },\n                        data: [\n                            {\n                                name: 'highest value',\n                                type: 'max',\n                                valueDim: 'highest',\n                                symbolOffset: [0, -20]\n                            },\n                            {\n                                name: 'lowest value',\n                                type: 'min',\n                                valueDim: 'lowest',\n                                symbolOffset: [0, -20]\n                            },\n                            {\n                                name: 'average value on close',\n                                type: 'average',\n                                valueDim: 'close',\n                                symbolOffset: [0, -20]\n                            }\n                        ],\n                        tooltip: {\n                            formatter: ((param) => param.name + '<br>' + (param.data.coord || ''))\n                        }\n                    },\n                    markLine: {\n                        symbol: ['none', 'none'],\n                        lineStyle: {\n                            color: downColor\n                        },\n                        data: [\n                            [\n                                {\n                                    name: 'from lowest to highest',\n                                    type: 'min',\n                                    valueDim: 'lowest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                },\n                                {\n                                    type: 'max',\n                                    valueDim: 'highest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                }\n                            ],\n                            {\n                                name: 'min line on close',\n                                type: 'min',\n                                valueDim: 'close'\n                            },\n                            {\n                                name: 'max line on close',\n                                type: 'max',\n                                valueDim: 'close'\n                            }\n                        ]\n                    }\n                },\n                {\n                    name: 'MA5',\n                    type: 'line',\n                    data: this.calculateMA(5),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#0000FF'\n                    }\n                },\n                {\n                    name: 'MA10',\n                    type: 'line',\n                    data: this.calculateMA(10),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#FFAE19',\n                    }\n                },\n                {\n                    name: 'MA20',\n                    type: 'line',\n                    data: this.calculateMA(20),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#FF00FF',\n                    }\n                },\n                // {\n                //     name: 'MA30',\n                //     type: 'line',\n                //     data: this.calculateMA(30),\n                //     smooth: true,\n                //     lineStyle: {\n                //         opacity: 0.5\n                //     }\n                // },\n                {\n                    name: 'Volume',\n                    type: 'bar',\n                    xAxisIndex: 1,\n                    yAxisIndex: 1,\n                    data: this.data.volumes\n                }\n\n            ]\n        };\n\n        // handle mark point for BUY/SELL from ARK\n        const filteredArkData = arkData.filter(x => x.Ticker === this.props.title);\n        if (!filteredArkData || filteredArkData.length === 0) {\n            return option;\n        }\n\n        const groupMap = _.groupBy(filteredArkData, 'Date');\n        for (let date in groupMap) {\n            const dataArrayInDate = groupMap[date];\n            const dataInProps = this.props.data.find(m => m[0] === dataArrayInDate[0].Date);\n            if (!(dataInProps && dataInProps[4])) {\n                continue;\n            }\n\n            const buyCount = dataArrayInDate.filter(x => x.Direction === 'Buy').length;\n            const sellCount = dataArrayInDate.length - buyCount;\n\n            if (buyCount === 0 || sellCount === 0) {\n                let pointText = '';\n                if (buyCount === 0) {\n                    pointText = sellCount === 1\n                        ? `${dataArrayInDate[0].Direction}`\n                        : `Sell\\nX${sellCount}`;\n                } else if (sellCount === 0) {\n                    pointText = buyCount === 1\n                        ? `${dataArrayInDate[0].Direction}`\n                        : `Buy\\nX${buyCount}`;\n                }\n\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} ${dataArrayInDate[0].Direction}`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: pointText,\n                    itemStyle: {\n                        color: buyCount === 0\n                            ? 'rgb(41,60,85)'\n                            : 'rgb(186, 171, 52)'\n                    }\n                })\n            } else {\n                // have buyCount > 0 and sellCount > 0\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} Buy`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: `Buy\\nX${buyCount}`,\n                    itemStyle: {\n                        color: 'rgb(186, 171, 52)'\n                    }\n                })\n\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} Sell`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4] * 1.1],\n                    value: `Sell\\n${sellCount}`,\n                    itemStyle: {\n                        color: 'rgb(41,60,85)'\n                    }\n                })\n            }\n        }\n        return option;\n    }\n\n    render() {\n        let subComponent;\n        if (this.props.data.length > 0) {\n            subComponent = <ReactEcharts\n                option={this.getOption()}\n                notMerge={true}\n                lazyUpdate={true}\n                style={{ height: '500px', width: '100%' }}\n                />\n        } else {\n            subComponent =\n                <div className=\"chart-placeholder\">\n                    <p>\n                        Search Any Ticker or Click Any Row/Cell\n                        <br></br>\n                        Candlestick Chart Will Display Below\n                    </p>\n                    <svg width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-double-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M1.646 6.646a.5.5 0 0 1 .708 0L8 12.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                        <path d=\"M1.646 2.646a.5.5 0 0 1 .708 0L8 8.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                    </svg>\n                </div>;\n        }\n\n        return (\n            <div>\n                {subComponent}\n            </div>\n        );\n    }\n}\n\nexport default StockFigure;","import React from 'react';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport packageJson from '../package.json';\nimport './layout.scss';\nimport { tickerService } from './services/ticker-service'\n\nimport Header from './components/header/header';\nimport MostActiveStocksTabs from './components/most-active-stocks-tabs/most-active-stocks-tabs';\nimport DataGrid from './components/data-grid/data-grid';\nimport StockFigure from './components/stock-figure/stock-figure';\n\nlet arkData = require('./rawData/mergedData.json');\n\nclass Layout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: ['most-active-stock-panel', 'candlestick-chart-panel'],\n            inputTicker: '',\n            massagedData: [],\n            figureTitle: '',\n            isInputing: false\n        };\n\n        this.handlePanelChange = this.handlePanelChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ inputTicker: ticker });\n                this.getCandleData(ticker);\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    getCandleData(ticker) {\n        let that = this;\n        let endDate = new Date().setHours(0, 0, 0, 0) / 1000;\n        let startDate = endDate - 60 * 24 * 60 * 60;\n        let getCandleUrl = 'https://finnhub.io/api/v1/stock/candle?';\n\n        const apiParams = {\n            symbol: ticker,\n            resolution: 'D',\n            from: startDate,\n            to: endDate,\n            token: 'bti26hf48v6uv69lirj0'\n        };\n        let paramsArray = [];\n        for (let prop in apiParams) {\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\n        }\n        getCandleUrl = getCandleUrl + paramsArray.join('&');\n\n        fetch(getCandleUrl, {\n            method: 'GET'\n        })\n            .then(response => response.json())\n            .then((data) => {\n                if (data && data.s === 'ok') {\n                    let massaged = [];\n                    for (let i = 0; i < data.t.length; i++) {\n                        let row = [];\n                        row.push(\n                            new Date(data.t[i] * 1000).toISOString()\n                                .split(\"T\")[0],\n                            Math.round(data.o[i] * 100) / 100,\n                            Math.round(data.c[i] * 100) / 100,\n                            Math.round(data.l[i] * 100) / 100,\n                            Math.round(data.h[i] * 100) / 100,\n                            data.v[i],\n                        )\n                        massaged.push(row);\n                    }\n\n                    that.setState({ figureTitle: ticker });\n                    that.setState({ massagedData: massaged });\n                }\n            })\n            .catch(error => this.setState({ error }));\n        // event.preventDefault();\n    }\n\n    handlePanelChange(panel) {\n        return (event, isExpanded) => {\n            // setExpanded(isExpanded ? panel : false);\n            const panelArr = this.state.expanded;\n            if (isExpanded) {\n                panelArr.push(panel)\n            } else {\n                const index = panelArr.indexOf(panel);\n                if (index > -1) {\n                    panelArr.splice(index, 1);\n                }\n            }\n            this.setState({ expanded: panelArr })\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"layout-wrapper\">\n                <div className=\"header-wrapper\">\n                    <Header />\n                </div>\n                <div className=\"accordion-wrapper\">\n                    <Accordion expanded={this.state.expanded.includes('most-active-stock-panel')} onChange={this.handlePanelChange('most-active-stock-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"most-active-stock-panel-content\"\n                            id=\"most-active-stock-panel-header\">\n                            <Typography className=\"accordion-heading\">Most Active Stocks in 30 days</Typography>\n                            <Typography className=\"accordion-second-heading\">The most active stocks ARK trades in the past 30 days</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className=\"most-active-stocks-tabs-wrapper\">\n                                <MostActiveStocksTabs />\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                    <Accordion expanded={this.state.expanded.includes('data-grid-panel')} onChange={this.handlePanelChange('data-grid-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"data-grid-panel-content\"\n                            id=\"data-grid-panel-header\">\n                            <Typography className=\"accordion-heading\">ARK Transactions Table</Typography>\n                            <Typography className=\"accordion-second-heading\">Includes all ARK transactions from Aug 18th, 2020</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <DataGrid />\n                        </AccordionDetails>\n                    </Accordion>\n                    <Accordion expanded={this.state.expanded.includes('candlestick-chart-panel')} onChange={this.handlePanelChange('candlestick-chart-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"candlestick-chart-panel-content\"\n                            id=\"candlestick-chart-panel-header\">\n                            <Typography className=\"accordion-heading\">Candlestick Chart</Typography>\n                            <Typography className=\"accordion-second-heading\">Candlestick chart with ARK transaction history</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className=\"stock-figure-wrapper\">\n                                <StockFigure title={this.state.figureTitle.toUpperCase()} data={this.state.massagedData} />;\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n\n                <div className='info-container'>\n                    <p className='info-version'>Version: {packageJson.version}</p>\n                    <p className='info-update-date'>Last Update Date: {arkData[0]['Date']}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Layout from './layout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}