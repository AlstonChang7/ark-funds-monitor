{"version":3,"sources":["services/generic-service.js","components/header/header.js","components/most-active-stocks-tabs/stock-card/stock-card.js","components/most-active-stocks-tabs/most-active-stocks-tabs.js","components/data-grid/data-grid.js","components/stock-figure/stock-figure.js","layout.js","serviceWorker.js","index.js"],"names":["tickerSubject","Subject","mostActiveDaysRangeSubject","BehaviorSubject","candlestickDaysRangeSubject","tickerService","ticker","next","asObservable","daysRangeService","daysRange","Header","props","state","inputTicker","handleChange","bind","handleBlur","handleSubmit","handlingComposition","handleComposition","isCompositionEnd","this","tickerSubscription","subscribe","setState","unsubscribe","e","event","target","value","trim","toUpperCase","preventDefault","className","Grid","container","spacing","justify","alignItems","item","xs","md","href","height","width","src","alt","title","onSubmit","FormControl","Input","id","onCompositionStart","onCompositionUpdate","onCompositionEnd","onChange","onBlur","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","color","React","Component","StockCard","data","Card","style","backgroundColor","handleClickTicker","CardContent","Typography","gutterBottom","name","variant","component","noOfBuy","noOfSell","noOfTransactions","arkData","require","MostActiveStocksTabs","handleTabChange","newTabIndex","tabIndex","tabsColor","tabIndicatorColor","mostActiveStocks","mostBuyStocks","mostSellStocks","mostActiveDaysRangeSubscription","initCardsData","hash","rslt","lastestDate","Date","deadlineTimestamp","setHours","tran","Ticker","push","Name","directionSymbols","transactionsDetails","stock","find","x","Direction","unshift","numberOfStocks","length","filter","sort","a","b","slice","Tabs","orientation","TabIndicatorProps","background","Tab","label","a11yProps","TabPanel","index","map","el","key","children","other","role","hidden","aria-labelledby","Box","p","rawData","Array","prototype","swapElements","splice","DataGrid","window","innerWidth","innerHeight","updateWindowDimensions","columnDefs","Object","keys","massageRawData","genericColDef","field","specificColDef","minWidth","assign","tempData","_","addEventListener","removeEventListener","dataGridDef","defaultColDef","resizable","sortable","floatingFilter","getColumnDefs","rowData","join","paginationAutoPageSize","pagination","onRowClicked","StockFigure","nextProps","isLoading","categoryData","values","volumes","i","dayCount","result","len","sum","j","Math","round","splitData","option","text","left","top","textStyle","fontSize","tooltip","trigger","axisPointer","animation","type","lineStyle","opacity","legend","inactiveColor","link","xAxisIndex","toolbox","show","feature","dataZoom","yAxisIndex","brush","visualMap","seriesIndex","dimension","pieces","grid","right","bottom","xAxis","scale","boundaryGap","axisLine","onZero","splitLine","splitNumber","min","max","axisLabel","gridIndex","axisTick","yAxis","splitArea","start","end","handleIcon","handleSize","dataBackground","areaStyle","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","itemStyle","color0","borderColor","borderColor0","markPoint","normal","formatter","param","valueDim","symbolOffset","coord","markLine","symbol","symbolSize","emphasis","calculateMA","smooth","filteredArkData","groupMap","date","dataArrayInDate","dataInProps","m","buyCount","sellCount","pointText","subComponent","CircularProgress","fullRangePercentage","halfRangePercentage","fullRangeChange","toFixed","halfRangeChange","getOption","notMerge","lazyUpdate","viewBox","fill","xmlns","d","Layout","expanded","mostActiveDaysRange","candlestickDaysRange","massagedData","figureTitle","isFigureLoading","errorMessage","isInputing","handlePanelChange","handleClickDaysRange","handleSelectDaysRange","getCandleData","candlestickDaysRangeSubscription","that","endDate","getCandleUrl","apiParams","resolution","from","to","token","paramsArray","prop","fetch","method","then","response","json","s","massaged","t","row","toISOString","split","o","c","l","h","v","catch","error","panel","isExpanded","panelArr","indexOf","stopPropagation","notificationBar","Alert","severity","onClose","Accordion","includes","AccordionSummary","expandIcon","aria-controls","Select","labelId","MenuProps","disableScrollLock","MenuItem","AccordionDetails","packageJson","version","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.8cf288fc.chunk.js","sourcesContent":["import { Subject, BehaviorSubject } from 'rxjs';\n\nconst tickerSubject = new Subject('');\n\nconst mostActiveDaysRangeSubject = new BehaviorSubject(7);\nconst candlestickDaysRangeSubject = new BehaviorSubject(30);\n\nexport const tickerService = {\n    changeTicker: ticker => tickerSubject.next(ticker),\n    clearTicker: () => tickerSubject.next(),\n    getTicker: () => tickerSubject.asObservable()\n};\n\nexport const daysRangeService = {\n    changeMostActiveDaysRange: daysRange => mostActiveDaysRangeSubject.next(daysRange),\n    clearMostActiveDaysRange: () => mostActiveDaysRangeSubject.next(),\n    getMostActiveDaysRange: () => mostActiveDaysRangeSubject.asObservable(),\n\n    changeCandlestickDaysRange: daysRange => candlestickDaysRangeSubject.next(daysRange),\n    clearCandlestickDaysRange: () => candlestickDaysRangeSubject.next(),\n    getCandlestickDaysRange: () => candlestickDaysRangeSubject.asObservable()\n};","import React from 'react';\nimport {\n    Grid, Input, FormControl,\n    IconButton, InputAdornment,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './header.scss';\nimport { tickerService } from '../../services/generic-service'\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputTicker: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlingComposition = this.handlingComposition.bind(this);\n        this.handleComposition = this.handleComposition.bind(this);\n        this.isCompositionEnd = true;\n\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ inputTicker: ticker });\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    handlingComposition() {\n        this.isCompositionEnd = false;\n    }\n\n    handleComposition(e) {\n        this.isCompositionEnd = true;\n    }\n\n    handleChange(event) {\n        if (this.isCompositionEnd) {\n            this.setState({ inputTicker: event.target.value.trim().toUpperCase() });\n        }\n    }\n\n    handleBlur(event) {\n        this.isCompositionEnd = true;\n    }\n\n    handleSubmit(event) {\n        tickerService.changeTicker(this.state.inputTicker);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"header-section\">\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={6} md={10} className='title-container'>\n                        <span className=\"logo\">\n                            <a href=\"http://IssueX.github.io/ark-funds-monitor/\">\n                                <img height=\"90\" width=\"120\" src=\"https://ark-funds.com/wp-content/uploads/2020/07/ark-logo-1-1.svg\" alt=\"ark-funds.com\" title=\"\" />\n                            </a>\n                        </span>\n                        <span className='title'>ARK Funds Monitor</span>\n                    </Grid>\n\n                    <Grid item xs={6} md={2} className=\"ticker-input-section\">\n                        <form onSubmit={this.handleSubmit}>\n                            <FormControl>\n                                <div>\n                                    <Input\n                                        id=\"ticker-textfield\"\n                                        value={this.state.inputTicker}\n                                        onCompositionStart={this.handlingComposition}\n                                        onCompositionUpdate={this.handlingComposition}\n                                        onCompositionEnd={this.handleComposition}\n                                        onChange={this.handleChange}\n                                        onBlur={this.handleBlur}\n                                        placeholder='Ticker'\n                                        endAdornment={\n                                            <InputAdornment position=\"start\">\n                                                <IconButton\n                                                    aria-label=\"Search\"\n                                                    onClick={this.handleSubmit}\n                                                    edge=\"end\"\n                                                >\n                                                    <SearchIcon color=\"primary\" />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </div>\n                            </FormControl>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n};\n\nexport default Header;","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport './stock-card.scss';\nimport { tickerService } from '../../../services/generic-service';\n\nclass StockCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    handleClickTicker(event) {\n        tickerService.changeTicker(this.props.data.ticker);\n    }\n\n    render() {\n        return (\n            <div className=\"stock-card-wrapper\">\n                <Card style={{backgroundColor: this.props.backgroundColor}} onClick={this.handleClickTicker.bind(this)}>\n                    <CardContent>\n                        <Typography className='card-ticker'>\n                            {this.props.data.ticker}\n                        </Typography>\n                        <Typography className='card-full-name' color=\"textSecondary\" gutterBottom>\n                            {this.props.data.name}\n                        </Typography>\n                        <Typography className='card-details' variant=\"body2\" component=\"p\">\n                            Buys : {this.props.data.noOfBuy}\n                            <br/>\n                            Sells: {this.props.data.noOfSell}\n                            <br/>\n                            Trans: {this.props.data.noOfTransactions}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n};\n\nexport default StockCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport './most-active-stocks-tabs.scss';\nimport StockCard from './stock-card/stock-card';\nimport { daysRangeService } from '../../services/generic-service';\n\nlet arkData = require('../../rawData/mergedData.json');\n\nclass MostActiveStocksTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tabIndex: 0,\n            // buy, sell, active colors\n            tabsColor: ['#00C805', '#FF5000', '#FCAE1E'],\n            tabIndicatorColor: '#00C805',\n            mostActiveStocks: [],\n            mostBuyStocks: [],\n            mostSellStocks: []\n        };\n        this.props = props;\n        this.handleTabChange = this.handleTabChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.mostActiveDaysRangeSubscription = daysRangeService.getMostActiveDaysRange().subscribe(daysRange => {\n            if (daysRange) {\n                this.initCardsData(arkData, daysRange);\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.mostActiveDaysRangeSubscription.unsubscribe();\n    }\n\n    initCardsData(arkData, daysRange) {\n        // for now, check all time data\n        // [{\n        // ticker: 'TSLA'\n        // name: Name\n        // noOfSell:\n        // noOfBuy:\n        // noOfTransactions: number:\n        // directionSymbol: []\n        // transactionsDetails: []\n        // }]\n        let hash = {};\n        let rslt = [];\n        let lastestDate = arkData[0].Date;\n        let deadlineTimestamp = '';\n\n        if (daysRange !== 10000) {\n            deadlineTimestamp = new Date(lastestDate).setHours(0, 0, 0, 0) - daysRange * 24 * 60 * 60 * 1000;\n        }\n\n        for (let tran of arkData) {\n            // handle deadline\n            if (deadlineTimestamp && new Date(tran.Date).setHours(0, 0, 0, 0) <= deadlineTimestamp) {\n                break;\n            }\n\n            if (!hash[tran.Ticker]) {\n                hash[tran.Ticker] = 1;\n                rslt.push({\n                    ticker: tran.Ticker,\n                    name: tran.Name,\n                    noOfSell: 0,\n                    noOfBuy: 0,\n                    noOfTransactions: 0,\n                    directionSymbols: [],\n                    transactionsDetails: []\n                })\n            } else {\n                hash[tran.Ticker]++;\n            }\n\n            const stock = rslt.find(x => x.ticker === tran.Ticker);\n            if (tran.Direction === 'Buy') {\n                stock.noOfBuy++;\n            } else if (tran.Direction === 'Sell') {\n                stock.noOfSell++;\n            }\n            stock.noOfTransactions++;\n            stock.directionSymbols.unshift(tran.Direction);\n            stock.transactionsDetails.push(tran);\n        }\n\n        const numberOfStocks = rslt.length > 10 ? 10 : rslt.length;\n        // eslint-disable-next-line\n        this.state.mostBuyStocks = rslt.filter(x => x.noOfBuy > 0).sort((a, b) => b.noOfBuy - a.noOfBuy).slice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostSellStocks = rslt.filter(x => x.noOfSell > 0).sort((a, b) => b.noOfSell - a.noOfSell).slice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostActiveStocks = rslt.sort((a, b) => b.noOfTransactions - a.noOfTransactions).slice(0, numberOfStocks);\n    }\n\n    handleTabChange = (event, newTabIndex) => {\n        this.setState({ tabIndex: newTabIndex });\n    };\n\n    render() {\n        return (\n            <div className=\"most-active-stocks-tabs-section\">\n                <Tabs\n                    orientation=\"vertical\"\n                    variant=\"scrollable\"\n                    value={this.state.tabIndex}\n                    onChange={this.handleTabChange}\n                    aria-label=\"Vertical tabs example\"\n                    TabIndicatorProps={{ style: { background: this.state.tabsColor[this.state.tabIndex] } }}\n                >\n                    <Tab label=\"Most Buy\" {...a11yProps(0)} />\n                    <Tab label=\"Most Sell\" {...a11yProps(1)} />\n                    <Tab label=\"Most Active\" {...a11yProps(2)} />\n                </Tabs>\n\n                <TabPanel value={this.state.tabIndex} index={0}>\n                    {this.state.mostBuyStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={1}>\n                    {this.state.mostSellStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={2}>\n                    {this.state.mostActiveStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\n                    )}\n                </TabPanel>\n            </div>\n        );\n    }\n};\n\nexport default MostActiveStocksTabs;\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3} className=\"vertical-tabpanel-content\">\n                    <div className=\"cards-wrapper\">{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}","import React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport * as _ from 'lodash';\nimport { Grid } from '@material-ui/core';\n\nimport './data-grid.scss';\nimport { tickerService } from '../../services/generic-service'\n\nlet rawData = require('../../rawData/mergedData.json');\n\n// eslint-disable-next-line\nArray.prototype.swapElements = function (a, b) {\n    this[a] = this.splice(b, 1, this[a])[0];\n    return this;\n}\n\nclass DataGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    getColumnDefs(rawData) {\n        const columnDefs = [];\n        const columnNamesInOrder = Object.keys(this.massageRawData(rawData)[0]).swapElements(0, 1);\n        // eslint-disable-next-line\n        columnNamesInOrder.map(x => {\n            let genericColDef = {\n                field: x,\n            };\n            let specificColDef = {};\n            switch (x) {\n                case 'Date':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 130,\n                    }\n                    break\n                case 'Direction':\n                case 'CUSIP':\n                case 'Shares':\n                case '% Of ETF':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 100,\n                    }\n                    break\n                case 'FUND':\n                case 'Ticker':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 90,\n                    }\n                    break\n                case 'Name':\n                    specificColDef = {\n                        width: this.state.width / 4,\n                    }\n                    break\n                default:\n                    specificColDef = {\n                        width: this.state.width / 8,\n                        minWidth: 100,\n                    };\n                    break;\n            }\n            columnDefs.push(Object.assign(genericColDef, specificColDef));\n        })\n        return columnDefs;\n    }\n\n    massageRawData(rawData) {\n        let tempData = _.cloneDeep(rawData);\n        // remove empty property\n        // eslint-disable-next-line\n        tempData.map(x => {\n            for (let key in x) {\n                if (key === '') {\n                    delete x[key];\n                }\n            }\n        })\n        return tempData;\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    onRowClicked(e) {\n        if (e && e.data && e.data.Ticker) {\n            tickerService.changeTicker(e.data.Ticker);\n        }\n    }\n\n    render() {\n        const dataGridDef = {\n            defaultColDef: {\n                resizable: true,\n                sortable: true,\n                filter: 'agTextColumnFilter',\n                floatingFilter: true\n            },\n            columnDefs: this.getColumnDefs(rawData),\n            rowData: this.massageRawData(rawData)\n        }\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} className={['ag-theme-alpine', 'center'].join(' ')}>\n                    <AgGridReact\n                        rowData={dataGridDef.rowData}\n                        columnDefs={dataGridDef.columnDefs}\n                        defaultColDef={dataGridDef.defaultColDef}\n                        paginationAutoPageSize={true}\n                        pagination={true}\n                        onRowClicked={this.onRowClicked.bind(this)}\n                    >\n                    </AgGridReact>\n                </Grid>\n            </Grid>\n        );\n    }\n};\n\nexport default DataGrid;","import React from 'react';\nimport * as _ from 'lodash';\nimport ReactEcharts from 'echarts-for-react';\nimport {\n    CircularProgress\n} from '@material-ui/core';\n\nimport './stock-figure.scss';\n\nlet arkData = require('../../rawData/mergedData.json');\n\nvar downColor = '#FF5000';\nvar downBorderColor = '#8A0000';\nvar upColor = '#00C805';\nvar upBorderColor = '#008F28';\n\nclass StockFigure extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '' };\n        this.props = props;\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.data !== nextProps.data || this.props.isLoading !== nextProps.isLoading;\n    }\n\n    splitData(rawData) {\n        var categoryData = [];\n        var values = [];\n        var volumes = [];\n\n        for (var i = 0; i < rawData.length; i++) {\n            categoryData.push(rawData[i].splice(0, 1)[0]);\n            values.push(rawData[i]);\n            volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]);;\n        }\n        return {\n            categoryData: categoryData,\n            values: values,\n            volumes: volumes\n        };\n    }\n\n    calculateMA(dayCount) {\n        var result = [];\n        for (var i = 0, len = this.data.values.length; i < len; i++) {\n            if (i < dayCount) {\n                result.push('-');\n                continue;\n            }\n            var sum = 0;\n            for (var j = 0; j < dayCount; j++) {\n                sum += this.data.values[i - j][1];\n            }\n            result.push(Math.round(sum / dayCount * 100) / 100);\n        }\n        return result;\n    }\n\n\n    getOption() {\n        this.data = this.splitData(_.cloneDeep(this.props.data));\n        // console.log(this.data)\n        let option = {\n            backgroundColor: '#fff',\n            title: {\n                text: this.props.title,\n                left: '2%',\n                top: '-1%',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 20\n                },\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    animation: false,\n                    type: 'cross',\n                    label: {\n                        fontSize: 16\n                    },\n                    lineStyle: {\n                        color: '#376df4',\n                        width: 2,\n                        opacity: 1\n                    }\n                },\n                textStyle: {\n                    fontSize: 16\n                }\n            },\n            legend: {\n                data: ['Day', 'MA5', 'MA10', 'MA20'],\n                inactiveColor: '#777',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 16\n                },\n                top: '3%',\n            },\n            axisPointer: {\n                link: { xAxisIndex: 'all' },\n                label: {\n                    backgroundColor: '#777'\n                }\n            },\n            toolbox: {\n                show: false,\n                feature: {\n                    dataZoom: {\n                        yAxisIndex: false\n                    },\n                    brush: {\n                        type: ['lineX', 'clear']\n                    }\n                }\n            },\n            visualMap: {\n                show: false,\n                seriesIndex: 4,\n                dimension: 2,\n                pieces: [{\n                    value: 1,\n                    color: downColor\n                }, {\n                    value: -1,\n                    color: upColor\n                }]\n            },\n            grid: [\n                {\n                    left: '5%',\n                    right: '5%',\n                    bottom: '30%'\n                },\n                {\n                    left: '5%',\n                    right: '5%',\n                    height: '15%',\n                    bottom: '10%'\n                }\n            ],\n            xAxis: [\n                {\n                    type: 'category',\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#000' } },\n                    splitLine: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax',\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            fontSize: 16\n                        }\n                    }\n                },\n                {\n                    type: 'category',\n                    gridIndex: 1,\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#8392A5' } },\n                    axisTick: { show: false },\n                    splitLine: { show: false },\n                    axisLabel: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax'\n                }\n            ],\n            yAxis: [{\n                scale: true,\n                splitArea: {\n                    show: true\n                },\n                axisLine: { lineStyle: { color: '#000' } },\n                splitLine: { show: false },\n                axisLabel: {\n                    show: true,\n                    textStyle: {\n                        fontSize: 16\n                    }\n                }\n            },\n            {\n                scale: true,\n                gridIndex: 1,\n                splitNumber: 2,\n                axisLabel: { show: false },\n                axisLine: { show: false, lineStyle: { color: '#000' } },\n                axisTick: { show: false },\n                splitLine: { show: false },\n            }\n            ],\n            dataZoom: [\n                {\n                    type: 'inside',\n                    start: 0,\n                    end: 100\n                },\n                {\n                    show: true,\n                    type: 'slider',\n                    bottom: '2%',\n                    start: 0,\n                    end: 100,\n                    textStyle: {\n                        color: '#8392A5'\n                    },\n                    handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                    handleSize: '80%',\n                    dataBackground: {\n                        areaStyle: {\n                            color: '#8392A5'\n                        },\n                        lineStyle: {\n                            opacity: 0.8,\n                            color: '#8392A5'\n                        }\n                    },\n                    handleStyle: {\n                        color: '#fff',\n                        shadowBlur: 3,\n                        shadowColor: 'rgba(0, 0, 0, 0.6)',\n                        shadowOffsetX: 2,\n                        shadowOffsetY: 2\n                    }\n                }\n            ],\n            series: [\n                {\n                    name: 'Day',\n                    type: 'candlestick',\n                    data: this.data.values,\n                    itemStyle: {\n                        color: upColor,\n                        color0: downColor,\n                        borderColor: upBorderColor,\n                        borderColor0: downBorderColor\n                    },\n                    markPoint:\n                    {\n                        label: {\n                            normal: {\n                                formatter: function (param) {\n                                    if (typeof (param) === 'number') {\n                                        return param != null ? Math.round(param.value) : '';\n                                    }\n                                }\n                            }\n                        },\n                        data: [\n                            {\n                                name: 'highest value',\n                                type: 'max',\n                                valueDim: 'highest',\n                                symbolOffset: [0, -20]\n                            },\n                            {\n                                name: 'lowest value',\n                                type: 'min',\n                                valueDim: 'lowest',\n                                symbolOffset: [0, -20]\n                            },\n                            {\n                                name: 'average value on close',\n                                type: 'average',\n                                valueDim: 'close',\n                                symbolOffset: [0, -20]\n                            }\n                        ],\n                        tooltip: {\n                            formatter: ((param) => param.name + '<br>' + (param.data.coord || ''))\n                        }\n                    },\n                    markLine: {\n                        symbol: ['none', 'none'],\n                        lineStyle: {\n                            color: downColor\n                        },\n                        data: [\n                            [\n                                {\n                                    name: 'from lowest to highest',\n                                    type: 'min',\n                                    valueDim: 'lowest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                },\n                                {\n                                    type: 'max',\n                                    valueDim: 'highest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                }\n                            ],\n                            {\n                                name: 'min line on close',\n                                type: 'min',\n                                valueDim: 'close'\n                            },\n                            {\n                                name: 'max line on close',\n                                type: 'max',\n                                valueDim: 'close'\n                            }\n                        ]\n                    }\n                },\n                {\n                    name: 'MA5',\n                    type: 'line',\n                    data: this.calculateMA(5),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#0000FF'\n                    }\n                },\n                {\n                    name: 'MA10',\n                    type: 'line',\n                    data: this.calculateMA(10),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#FFAE19',\n                    }\n                },\n                {\n                    name: 'MA20',\n                    type: 'line',\n                    data: this.calculateMA(20),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#FF00FF',\n                    }\n                },\n                // {\n                //     name: 'MA30',\n                //     type: 'line',\n                //     data: this.calculateMA(30),\n                //     smooth: true,\n                //     lineStyle: {\n                //         opacity: 0.5\n                //     }\n                // },\n                {\n                    name: 'Volume',\n                    type: 'bar',\n                    xAxisIndex: 1,\n                    yAxisIndex: 1,\n                    data: this.data.volumes\n                }\n\n            ]\n        };\n\n        // handle mark point for BUY/SELL from ARK\n        const filteredArkData = arkData.filter(x => x.Ticker === this.props.title);\n        if (!filteredArkData || filteredArkData.length === 0) {\n            return option;\n        }\n\n        const groupMap = _.groupBy(filteredArkData, 'Date');\n        for (let date in groupMap) {\n            const dataArrayInDate = groupMap[date];\n            const dataInProps = this.props.data.find(m => m[0] === dataArrayInDate[0].Date);\n            if (!(dataInProps && dataInProps[4])) {\n                continue;\n            }\n\n            const buyCount = dataArrayInDate.filter(x => x.Direction === 'Buy').length;\n            const sellCount = dataArrayInDate.length - buyCount;\n\n            if (buyCount === 0 || sellCount === 0) {\n                let pointText = '';\n                if (buyCount === 0) {\n                    pointText = sellCount === 1\n                        ? `${dataArrayInDate[0].Direction}`\n                        : `Sell\\nX${sellCount}`;\n                } else if (sellCount === 0) {\n                    pointText = buyCount === 1\n                        ? `${dataArrayInDate[0].Direction}`\n                        : `Buy\\nX${buyCount}`;\n                }\n\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} ${dataArrayInDate[0].Direction}`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: pointText,\n                    itemStyle: {\n                        color: buyCount === 0\n                            ? '#FF5000'\n                            : '#00C805'\n                    }\n                })\n            } else {\n                // have buyCount > 0 and sellCount > 0\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} Buy`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: `Buy\\nX${buyCount}`,\n                    itemStyle: {\n                        color: '#00C805'\n                    }\n                })\n\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} Sell`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4] * 1.1],\n                    value: `Sell\\n${sellCount}`,\n                    itemStyle: {\n                        color: '#FF5000'\n                    }\n                })\n            }\n        }\n        return option;\n    }\n\n    render() {\n        let subComponent;\n        if (this.props.isLoading === true) {\n            subComponent =\n                <div className='loader-wrapper'>\n                    <CircularProgress />\n                </div>\n        } else if (this.props.data.length > 0) {\n            const fullRangePercentage = this.props.data[this.props.data.length - 1][2] / this.props.data[0][2] - 1;\n            const halfRangePercentage = this.props.data[this.props.data.length - 1][2] / this.props.data[Math.round((this.props.data.length - 1) / 2)][2] - 1;\n\n            let fullRangeChange = (fullRangePercentage < 0 ? \"\" : \"+\") + (fullRangePercentage * 100).toFixed(2) + '%'\n            let halfRangeChange = (halfRangePercentage < 0 ? \"\" : \"+\") + (halfRangePercentage * 100).toFixed(2) + '%'\n\n            subComponent =\n                <div>\n                    <div className=\"highlights\">\n                        <div><p>Full range price change: {fullRangeChange}</p></div>\n                        <div><p>Half range price change: {halfRangeChange}</p></div>\n                    </div>\n                    <ReactEcharts\n                        option={this.getOption()}\n                        notMerge={true}\n                        lazyUpdate={true}\n                        style={{ height: '500px', width: '100%' }}\n                    />\n                </div>\n        } else {\n            subComponent =\n                <div className=\"chart-placeholder\">\n                    <p>\n                        Search Any Ticker/Tap Any Card/Tap Any Row\n                        <br></br>\n                        Candlestick Chart Will Display Below\n                    </p>\n                    <svg width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-double-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M1.646 6.646a.5.5 0 0 1 .708 0L8 12.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                        <path d=\"M1.646 2.646a.5.5 0 0 1 .708 0L8 8.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                    </svg>\n                </div>\n        }\n\n        return (\n            <div>\n                {subComponent}\n            </div>\n        )\n    }\n}\n\nexport default StockFigure;","import React from 'react';\nimport {\n    Accordion, Grid, AccordionDetails, AccordionSummary,\n    Typography, MenuItem, FormControl, Select\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Alert from '@material-ui/lab/Alert';\n\nimport packageJson from '../package.json';\nimport './layout.scss';\nimport { tickerService, daysRangeService } from './services/generic-service';\nimport Header from './components/header/header';\nimport MostActiveStocksTabs from './components/most-active-stocks-tabs/most-active-stocks-tabs';\nimport DataGrid from './components/data-grid/data-grid';\nimport StockFigure from './components/stock-figure/stock-figure';\n\nlet arkData = require('./rawData/mergedData.json');\n\nclass Layout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: ['most-active-stock-panel', 'candlestick-chart-panel'],\n            mostActiveDaysRange: 7,\n            candlestickDaysRange: 30,\n            inputTicker: '',\n            massagedData: [],\n            figureTitle: '',\n            isFigureLoading: false,\n            errorMessage: '',\n            isInputing: false\n        };\n\n        this.handlePanelChange = this.handlePanelChange.bind(this);\n        this.handleClickDaysRange = this.handleClickDaysRange.bind(this);\n        this.handleSelectDaysRange = this.handleSelectDaysRange.bind(this);\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ inputTicker: ticker });\n                this.getCandleData(ticker, this.state.candlestickDaysRange);\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n\n        this.mostActiveDaysRangeSubscription = daysRangeService.getMostActiveDaysRange().subscribe(mostActiveDaysRange => {\n            if (mostActiveDaysRange) {\n                this.setState({ mostActiveDaysRange: mostActiveDaysRange });\n            } else {\n                this.setState({ mostActiveDaysRange: 30 });\n            }\n        });\n\n        this.candlestickDaysRangeSubscription = daysRangeService.getCandlestickDaysRange().subscribe(candlestickDaysRange => {\n            if (candlestickDaysRange) {\n                this.setState({ candlestickDaysRange: candlestickDaysRange });\n            } else {\n                this.setState({ candlestickDaysRange: 30 });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n        this.mostActiveDaysRangeSubscription.unsubscribe();\n    }\n\n    getCandleData(ticker, daysRange) {\n        if (this.state.errorMessage) {\n            this.setState({ errorMessage: '' });\n        }\n        this.setState({ isFigureLoading: true });\n\n        let that = this;\n        let endDate = new Date().setHours(0, 0, 0, 0) / 1000;\n        let startDate = endDate - daysRange * 24 * 60 * 60;\n        let getCandleUrl = 'https://finnhub.io/api/v1/stock/candle?';\n\n        const apiParams = {\n            symbol: ticker,\n            resolution: 'D',\n            from: startDate,\n            to: endDate,\n            token: 'bti26hf48v6uv69lirj0'\n        };\n        let paramsArray = [];\n        for (let prop in apiParams) {\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\n        }\n        getCandleUrl = getCandleUrl + paramsArray.join('&');\n\n        fetch(getCandleUrl, {\n            method: 'GET'\n        })\n            .then(response => response.json())\n            .then((data) => {\n                if (data && data.s === 'ok') {\n                    let massaged = [];\n                    for (let i = 0; i < data.t.length; i++) {\n                        let row = [];\n                        row.push(\n                            new Date(data.t[i] * 1000).toISOString()\n                                .split(\"T\")[0],\n                            Math.round(data.o[i] * 100) / 100,\n                            Math.round(data.c[i] * 100) / 100,\n                            Math.round(data.l[i] * 100) / 100,\n                            Math.round(data.h[i] * 100) / 100,\n                            data.v[i],\n                        )\n                        massaged.push(row);\n                    }\n\n                    that.setState({ figureTitle: ticker });\n                    that.setState({ massagedData: massaged });\n                }\n\n                if (data.s === 'no_data') {\n                    that.setState({ errorMessage: `API returned 'NO DATA' for ${ticker}` });\n                }\n\n                that.setState({ isFigureLoading: false });\n            })\n            .catch(error => this.setState({ error }));\n    }\n\n    handlePanelChange(panel) {\n        return (event, isExpanded) => {\n            const panelArr = this.state.expanded;\n            if (isExpanded) {\n                panelArr.push(panel)\n            } else {\n                const index = panelArr.indexOf(panel);\n                if (index > -1) {\n                    panelArr.splice(index, 1);\n                }\n            }\n            this.setState({ expanded: panelArr })\n        }\n    };\n\n    handleClickDaysRange(event) {\n        event.stopPropagation();\n    }\n\n    handleSelectDaysRange(event, type) {\n        switch (type) {\n            case 'mostActive':\n                daysRangeService.changeMostActiveDaysRange(event.target.value);\n                break;\n            case 'candlestick':\n                daysRangeService.changeCandlestickDaysRange(event.target.value);\n                if (this.state.massagedData.length > 0) {\n                    this.getCandleData(this.state.inputTicker, event.target.value)\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        let notificationBar;\n        if (this.state.errorMessage) {\n            notificationBar = <Alert variant=\"filled\" severity=\"error\" onClose={() => { this.setState({ errorMessage: '' }) }}>{this.state.errorMessage}</Alert>\n        } else {\n            notificationBar = <div></div>\n        }\n        return (\n            <div className=\"layout-wrapper\">\n                <div className=\"header-wrapper\">\n                    <Header />\n                </div>\n                <div className=\"notification-bar-wrapper\">\n                    {notificationBar}\n                </div>\n                <div className=\"accordion-wrapper\">\n                    <Accordion expanded={this.state.expanded.includes('most-active-stock-panel')} onChange={this.handlePanelChange('most-active-stock-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"most-active-stock-panel-content\"\n                            id=\"most-active-stock-panel-header\">\n\n                            <Grid item xs={5} md={4}>\n                                <Typography className=\"accordion-heading\">Most Active Stocks</Typography>\n                            </Grid>\n\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\n                                <Typography className=\"accordion-second-heading\" component={'span'}>\n                                    Top 10 Most Active Stocks that ARK Trades in\n                                <FormControl className=\"days-dropdown\">\n                                        <Select\n                                            labelId=\"demo-simple-select-placeholder-label-label\"\n                                            id=\"demo-simple-select-placeholder-label\"\n                                            value={this.state.mostActiveDaysRange}\n                                            onClick={(e) => this.handleClickDaysRange(e)}\n                                            onChange={(e) => this.handleSelectDaysRange(e, 'mostActive')}\n                                            MenuProps={{ disableScrollLock: true }}\n                                        >\n                                            <MenuItem value={1}>1 Day</MenuItem>\n                                            <MenuItem value={7}>1 Week</MenuItem>\n                                            <MenuItem value={14}>2 Weeks</MenuItem>\n                                            <MenuItem value={30}>1 Month</MenuItem>\n                                            <MenuItem value={60}>2 Months</MenuItem>\n                                            <MenuItem value={10000}>From 08/18/2020</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Typography>\n                            </Grid>\n\n                        </AccordionSummary>\n\n                        <AccordionDetails>\n                            <div className=\"most-active-stocks-tabs-wrapper\">\n                                <MostActiveStocksTabs />\n                            </div>\n                        </AccordionDetails>\n\n                    </Accordion>\n\n                    <Accordion expanded={this.state.expanded.includes('data-grid-panel')} onChange={this.handlePanelChange('data-grid-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"data-grid-panel-content\"\n                            id=\"data-grid-panel-header\">\n\n                            <Grid item xs={5} md={4}>\n                                <Typography className=\"accordion-heading\">Transactions Table</Typography>\n                            </Grid>\n\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\n                                <Typography className=\"accordion-second-heading\">All ARK Transactions from Aug 18th, 2020</Typography>\n                            </Grid>\n\n                        </AccordionSummary>\n\n                        <AccordionDetails>\n                            <DataGrid />\n                        </AccordionDetails>\n\n                    </Accordion>\n\n                    <Accordion expanded={this.state.expanded.includes('candlestick-chart-panel')} onChange={this.handlePanelChange('candlestick-chart-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"candlestick-chart-panel-content\"\n                            id=\"candlestick-chart-panel-header\">\n\n                            <Grid item xs={5} md={4}>\n                                <Typography className=\"accordion-heading\">Candlestick Chart</Typography>\n                            </Grid>\n\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\n                                <Typography className=\"accordion-second-heading\" component={'span'}>\n                                    <FormControl className=\"days-dropdown\">\n                                        <Select\n                                            labelId=\"demo-simple-select-placeholder-label-label\"\n                                            id=\"demo-simple-select-placeholder-label\"\n                                            value={this.state.candlestickDaysRange}\n                                            onClick={(e) => this.handleClickDaysRange(e)}\n                                            onChange={(e) => this.handleSelectDaysRange(e, 'candlestick')}\n                                            MenuProps={{ disableScrollLock: true }}\n                                        >\n                                            <MenuItem value={7}>1 Week</MenuItem>\n                                            <MenuItem value={14}>2 Weeks</MenuItem>\n                                            <MenuItem value={30}>1 Month</MenuItem>\n                                            <MenuItem value={90}>3 Months</MenuItem>\n                                            <MenuItem value={365}>1 Year</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                Candlestick Chart with ARK Trade Points</Typography>\n                            </Grid>\n\n                        </AccordionSummary>\n\n                        <AccordionDetails>\n                            <div className=\"stock-figure-wrapper\">\n                                <StockFigure title={this.state.figureTitle.toUpperCase()} data={this.state.massagedData} isLoading={this.state.isFigureLoading} />\n                            </div>\n                        </AccordionDetails>\n\n                    </Accordion>\n                </div>\n\n                <div className='info-container'>\n                    <p className='info-version'>Version: {packageJson.version}</p>\n                    <p className='info-update-date'>Latest ARK Data: {arkData[0]['Date']}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Layout from './layout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}