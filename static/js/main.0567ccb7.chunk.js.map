{"version":3,"sources":["services/generic-service.js","components/header/header.js","components/most-active-stocks-tabs/stock-card/stock-card.js","components/most-active-stocks-tabs/most-active-stocks-tabs.js","components/data-grid/data-grid.js","components/stock-figure/stock-figure.js","layout.js","serviceWorker.js","index.js"],"names":["tickerSubject","Subject","daysRangeSubject","BehaviorSubject","tickerService","ticker","next","asObservable","daysRangeService","daysRange","Header","props","state","inputTicker","handleChange","bind","handleBlur","handleSubmit","handlingComposition","handleComposition","isCompositionEnd","this","tickerSubscription","subscribe","setState","unsubscribe","e","event","target","value","trim","toUpperCase","preventDefault","className","Grid","container","spacing","justify","alignItems","item","xs","md","href","height","width","src","alt","title","onSubmit","FormControl","Input","id","onCompositionStart","onCompositionUpdate","onCompositionEnd","onChange","onBlur","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","color","React","Component","StockCard","data","Card","style","backgroundColor","handleClickTicker","CardContent","Typography","gutterBottom","name","variant","component","noOfBuy","noOfSell","noOfTransactions","arkData","require","MostActiveStocksTabs","handleTabChange","newTabIndex","tabIndex","mostActiveStocks","mostBuyStocks","mostSellStocks","daysRangeSubscription","initCardsData","hash","rslt","dateString","deadlineDate","Date","setHours","toISOString","split","tran","Ticker","push","Name","directionSymbols","transactionsDetails","stock","find","x","Direction","unshift","sort","a","b","slice","Tabs","orientation","Tab","label","a11yProps","TabPanel","index","map","el","key","children","other","role","hidden","aria-labelledby","Box","p","rawData","Array","prototype","swapElements","splice","DataGrid","window","innerWidth","innerHeight","updateWindowDimensions","columnDefs","Object","keys","massageRawData","genericColDef","field","specificColDef","minWidth","assign","tempData","_","addEventListener","removeEventListener","dataGridDef","defaultColDef","resizable","sortable","filter","floatingFilter","getColumnDefs","rowData","join","paginationAutoPageSize","pagination","onRowClicked","StockFigure","nextProps","categoryData","values","volumes","i","length","dayCount","result","len","sum","j","Math","round","splitData","option","text","left","textStyle","fontSize","tooltip","trigger","axisPointer","animation","type","lineStyle","opacity","legend","inactiveColor","top","link","xAxisIndex","toolbox","show","feature","dataZoom","yAxisIndex","brush","visualMap","seriesIndex","dimension","pieces","grid","right","bottom","xAxis","scale","boundaryGap","axisLine","onZero","splitLine","splitNumber","min","max","axisLabel","gridIndex","axisTick","yAxis","splitArea","start","end","handleIcon","handleSize","dataBackground","areaStyle","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","itemStyle","color0","borderColor","borderColor0","markPoint","normal","formatter","param","valueDim","symbolOffset","coord","markLine","symbol","symbolSize","emphasis","calculateMA","smooth","filteredArkData","groupMap","date","dataArrayInDate","dataInProps","m","buyCount","sellCount","pointText","subComponent","sixtyDaysPercentage","thirtyDaysPercentage","sixtyPerf","toFixed","thirtyPerf","getOption","notMerge","lazyUpdate","viewBox","fill","xmlns","d","Layout","expanded","massagedData","figureTitle","isInputing","handlePanelChange","getCandleData","that","endDate","getCandleUrl","apiParams","resolution","from","to","token","paramsArray","prop","fetch","method","then","response","json","s","massaged","t","row","o","c","l","h","v","catch","error","panel","isExpanded","panelArr","indexOf","stopPropagation","Accordion","includes","AccordionSummary","expandIcon","aria-controls","Select","labelId","handleClickDaysRange","handleSelectDaysRange","MenuProps","disableScrollLock","MenuItem","AccordionDetails","packageJson","version","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.0567ccb7.chunk.js","sourcesContent":["import { Subject, BehaviorSubject } from 'rxjs';\n\nconst tickerSubject = new Subject('');\n\nconst daysRangeSubject = new BehaviorSubject(30);\n\nexport const tickerService = {\n    changeTicker: ticker => tickerSubject.next(ticker),\n    clearTicker: () => tickerSubject.next(),\n    getTicker: () => tickerSubject.asObservable()\n};\n\nexport const daysRangeService = {\n    changeDaysRange: daysRange => daysRangeSubject.next(daysRange),\n    clearDaysRange: () => daysRangeSubject.next(),\n    getDaysRange: () => daysRangeSubject.asObservable()\n};","import React from 'react';\nimport {\n    Grid, Input, FormControl,\n    IconButton, InputAdornment,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './header.scss';\nimport { tickerService } from '../../services/generic-service'\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputTicker: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlingComposition = this.handlingComposition.bind(this);\n        this.handleComposition = this.handleComposition.bind(this);\n        this.isCompositionEnd = true;\n\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ inputTicker: ticker });\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    handlingComposition() {\n        this.isCompositionEnd = false;\n    }\n\n    handleComposition(e) {\n        this.isCompositionEnd = true;\n    }\n\n    handleChange(event) {\n        if (this.isCompositionEnd) {\n            this.setState({ inputTicker: event.target.value.trim().toUpperCase() });\n        }\n    }\n\n    handleBlur(event) {\n        this.isCompositionEnd = true;\n    }\n\n    handleSubmit(event) {\n        tickerService.changeTicker(this.state.inputTicker);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"header-section\">\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={6} md={10} className='title-container'>\n                        <span className=\"logo\">\n                            <a href=\"http://IssueX.github.io/ark-funds-monitor/\">\n                                <img height=\"90\" width=\"120\" src=\"https://ark-funds.com/wp-content/uploads/2020/07/ark-logo-1-1.svg\" alt=\"ark-funds.com\" title=\"\" />\n                            </a>\n                        </span>\n                        <span className='title'>ARK Funds Monitor</span>\n                    </Grid>\n\n                    <Grid item xs={6} md={2} className=\"ticker-input-section\">\n                        <form onSubmit={this.handleSubmit}>\n                            <FormControl>\n                                <div>\n                                    <Input\n                                        id=\"ticker-textfield\"\n                                        value={this.state.inputTicker}\n                                        onCompositionStart={this.handlingComposition}\n                                        onCompositionUpdate={this.handlingComposition}\n                                        onCompositionEnd={this.handleComposition}\n                                        onChange={this.handleChange}\n                                        onBlur={this.handleBlur}\n                                        placeholder='Ticker'\n                                        endAdornment={\n                                            <InputAdornment position=\"start\">\n                                                <IconButton\n                                                    aria-label=\"Search\"\n                                                    onClick={this.handleSubmit}\n                                                    edge=\"end\"\n                                                >\n                                                    <SearchIcon color=\"primary\" />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </div>\n                            </FormControl>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n};\n\nexport default Header;","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport './stock-card.scss';\nimport { tickerService } from '../../../services/generic-service';\n\nclass StockCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    handleClickTicker(event) {\n        tickerService.changeTicker(this.props.data.ticker);\n    }\n\n    render() {\n        return (\n            <div className=\"stock-card-wrapper\">\n                <Card style={{backgroundColor: this.props.backgroundColor}} onClick={this.handleClickTicker.bind(this)}>\n                    <CardContent>\n                        <Typography className='card-ticker'>\n                            {this.props.data.ticker}\n                        </Typography>\n                        <Typography className='card-full-name' color=\"textSecondary\" gutterBottom>\n                            {this.props.data.name}\n                        </Typography>\n                        <Typography className='card-details' variant=\"body2\" component=\"p\">\n                            Buys : {this.props.data.noOfBuy}\n                            <br/>\n                            Sells: {this.props.data.noOfSell}\n                            <br/>\n                            Trans: {this.props.data.noOfTransactions}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n};\n\nexport default StockCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport './most-active-stocks-tabs.scss';\nimport StockCard from './stock-card/stock-card';\nimport { daysRangeService } from '../../services/generic-service';\n\nlet arkData = require('../../rawData/mergedData.json');\n\nclass MostActiveStocksTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tabIndex: 0,\n            mostActiveStocks: [],\n            mostBuyStocks: [],\n            mostSellStocks: []\n        };\n        this.props = props;\n        this.handleTabChange = this.handleTabChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.daysRangeSubscription = daysRangeService.getDaysRange().subscribe(daysRange => {\n            if (daysRange) {\n                this.initCardsData(arkData, daysRange);\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.daysRangeSubscription.unsubscribe();\n    }\n\n    initCardsData(arkData, daysRange) {\n        // for now, check all time data\n        // [{\n        // ticker: 'TSLA'\n        // name: Name\n        // noOfSell:\n        // noOfBuy:\n        // noOfTransactions: number:\n        // directionSymbol: []\n        // transactionsDetails: []\n        // }]\n        let hash = {};\n        let rslt = [];\n\n        let dateString = '';\n        if (daysRange !== 10000) {\n            const deadlineDate = new Date().setHours(0, 0, 0, 0) / 1000 - daysRange * 24 * 60 * 60;\n            dateString = new Date(deadlineDate * 1000).toISOString().split(\"T\")[0];\n        }\n\n        for (let tran of arkData) {\n            if (dateString && dateString === tran.Date) {\n                break;\n            }\n\n            if (!hash[tran.Ticker]) {\n                hash[tran.Ticker] = 1;\n                rslt.push({\n                    ticker: tran.Ticker,\n                    name: tran.Name,\n                    noOfSell: 0,\n                    noOfBuy: 0,\n                    noOfTransactions: 0,\n                    directionSymbols: [],\n                    transactionsDetails: []\n                })\n            } else {\n                hash[tran.Ticker]++;\n            }\n\n            const stock = rslt.find(x => x.ticker === tran.Ticker);\n            if (tran.Direction === 'Buy') {\n                stock.noOfBuy++;\n            } else if (tran.Direction === 'Sell') {\n                stock.noOfSell++;\n            }\n            stock.noOfTransactions++;\n            stock.directionSymbols.unshift(tran.Direction);\n            stock.transactionsDetails.push(tran);\n        }\n\n        const numberOfStocks = 5;\n        // eslint-disable-next-line\n        this.state.mostActiveStocks = rslt.sort((a, b) => b.noOfTransactions - a.noOfTransactions).slice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostBuyStocks = rslt.sort((a, b) => b.noOfBuy - a.noOfBuy).slice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostSellStocks = rslt.sort((a, b) => b.noOfSell - a.noOfSell).slice(0, numberOfStocks);      \n    }\n\n    handleTabChange = (event, newTabIndex) => {\n        this.setState({ tabIndex: newTabIndex })\n    };\n\n    render() {\n        return (\n            <div className=\"most-active-stocks-tabs-section\">\n                <Tabs\n                    orientation=\"vertical\"\n                    variant=\"scrollable\"\n                    value={this.state.tabIndex}\n                    onChange={this.handleTabChange}\n                    aria-label=\"Vertical tabs example\"\n                >\n                    <Tab label=\"Most Active\" {...a11yProps(0)} />\n                    <Tab label=\"Most Buy\" {...a11yProps(1)} />\n                    <Tab label=\"Most Sell\" {...a11yProps(2)} />\n                </Tabs>\n                <TabPanel value={this.state.tabIndex} index={0}>\n                    {this.state.mostActiveStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={'#FCAE1E'}/>\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={1}>\n                    {this.state.mostBuyStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={'#00C805'}/>\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={2}>\n                    {this.state.mostSellStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={'#FF5000'}/>\n                    )}\n                </TabPanel>\n            </div>\n        );\n    }\n};\n\nexport default MostActiveStocksTabs;\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3} className=\"vertical-tabpanel-content\">\n                    <div className=\"cards-wrapper\">{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}","import React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\nimport * as _ from 'lodash';\nimport { Grid } from '@material-ui/core';\nimport './data-grid.scss';\n\nimport { tickerService } from '../../services/generic-service'\n\nlet rawData = require('../../rawData/mergedData.json');\n\n// eslint-disable-next-line\nArray.prototype.swapElements = function (a, b) {\n    this[a] = this.splice(b, 1, this[a])[0];\n    return this;\n}\n\nclass DataGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    getColumnDefs(rawData) {\n        const columnDefs = [];\n        const columnNamesInOrder = Object.keys(this.massageRawData(rawData)[0]).swapElements(0, 1);\n        // eslint-disable-next-line\n        columnNamesInOrder.map(x => {\n            let genericColDef = {\n                field: x,\n            };\n            let specificColDef = {};\n            switch (x) {\n                case 'Date':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 130,\n                    }\n                    break\n                case 'Direction':\n                case 'CUSIP':\n                case 'Shares':\n                case '% Of ETF':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 100,\n                    }\n                    break\n                case 'FUND':\n                case 'Ticker':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 90,\n                    }\n                    break\n                case 'Name':\n                    specificColDef = {\n                        width: this.state.width / 4,\n                    }\n                    break\n                default:\n                    specificColDef = {\n                        width: this.state.width / 8,\n                        minWidth: 100,\n                    };\n                    break;\n            }\n            columnDefs.push(Object.assign(genericColDef, specificColDef));\n        })\n        return columnDefs;\n    }\n\n    massageRawData(rawData) {\n        let tempData = _.cloneDeep(rawData);\n        // remove empty property\n        // eslint-disable-next-line\n        tempData.map(x => {\n            for (let key in x) {\n                if (key === '') {\n                    delete x[key];\n                }\n            }\n        })\n        return tempData;\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    onRowClicked(e) {\n        if (e && e.data && e.data.Ticker) {\n            tickerService.changeTicker(e.data.Ticker);\n        }\n    }\n\n    render() {\n        const dataGridDef = {\n            defaultColDef: {\n                resizable: true,\n                sortable: true,\n                filter: 'agTextColumnFilter',\n                floatingFilter: true\n            },\n            columnDefs: this.getColumnDefs(rawData),\n            rowData: this.massageRawData(rawData)\n        }\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} className={['ag-theme-alpine', 'center'].join(' ')}>\n                    <AgGridReact\n                        rowData={dataGridDef.rowData}\n                        columnDefs={dataGridDef.columnDefs}\n                        defaultColDef={dataGridDef.defaultColDef}\n                        paginationAutoPageSize={true}\n                        pagination={true}\n                        onRowClicked={this.onRowClicked.bind(this)}\n                    >\n                    </AgGridReact>\n                </Grid>\n            </Grid>\n        );\n    }\n};\n\nexport default DataGrid;","import React from 'react';\nimport * as _ from 'lodash';\nimport './stock-figure.scss';\nimport ReactEcharts from 'echarts-for-react';\n\nlet arkData = require('../../rawData/mergedData.json');\n\nvar downColor = '#FF5000';\nvar downBorderColor = '#8A0000';\nvar upColor = '#00C805';\nvar upBorderColor = '#008F28';\n\nclass StockFigure extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '' };\n        this.props = props;\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.data !== nextProps.data;\n    }\n\n    splitData(rawData) {\n        var categoryData = [];\n        var values = [];\n        var volumes = [];\n\n        for (var i = 0; i < rawData.length; i++) {\n            categoryData.push(rawData[i].splice(0, 1)[0]);\n            values.push(rawData[i]);\n            volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]);;\n        }\n        return {\n            categoryData: categoryData,\n            values: values,\n            volumes: volumes\n        };\n    }\n\n    calculateMA(dayCount) {\n        var result = [];\n        for (var i = 0, len = this.data.values.length; i < len; i++) {\n            if (i < dayCount) {\n                result.push('-');\n                continue;\n            }\n            var sum = 0;\n            for (var j = 0; j < dayCount; j++) {\n                sum += this.data.values[i - j][1];\n            }\n            result.push(Math.round(sum / dayCount * 100) / 100);\n        }\n        return result;\n    }\n\n\n    getOption() {\n        this.data = this.splitData(_.cloneDeep(this.props.data));\n        // console.log(this.data)\n        let option = {\n            backgroundColor: '#fff',\n            title: {\n                text: this.props.title,\n                left: '5%',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 20\n                },\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    animation: false,\n                    type: 'cross',\n                    label: {\n                        fontSize: 16\n                    },\n                    lineStyle: {\n                        color: '#376df4',\n                        width: 2,\n                        opacity: 1\n                    }\n                },\n                textStyle: {\n                    fontSize: 16\n                }\n            },\n            legend: {\n                data: ['Day', 'MA5', 'MA10', 'MA20'],\n                inactiveColor: '#777',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 16\n                },\n                top: '3%',\n            },\n            axisPointer: {\n                link: { xAxisIndex: 'all' },\n                label: {\n                    backgroundColor: '#777'\n                }\n            },\n            toolbox: {\n                show: false,\n                feature: {\n                    dataZoom: {\n                        yAxisIndex: false\n                    },\n                    brush: {\n                        type: ['lineX', 'clear']\n                    }\n                }\n            },\n            visualMap: {\n                show: false,\n                seriesIndex: 4,\n                dimension: 2,\n                pieces: [{\n                    value: 1,\n                    color: downColor\n                }, {\n                    value: -1,\n                    color: upColor\n                }]\n            },\n            grid: [\n                {\n                    left: '5%',\n                    right: '5%',\n                    bottom: '30%'\n                },\n                {\n                    left: '5%',\n                    right: '5%',\n                    height: '15%',\n                    bottom: '10%'\n                }\n            ],\n            xAxis: [\n                {\n                    type: 'category',\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#000' } },\n                    splitLine: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax',\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            fontSize: 16\n                        }\n                    }\n                },\n                {\n                    type: 'category',\n                    gridIndex: 1,\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#8392A5' } },\n                    axisTick: { show: false },\n                    splitLine: { show: false },\n                    axisLabel: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax'\n                }\n            ],\n            yAxis: [{\n                scale: true,\n                splitArea: {\n                    show: true\n                },\n                axisLine: { lineStyle: { color: '#000' } },\n                splitLine: { show: false },\n                axisLabel: {\n                    show: true,\n                    textStyle: {\n                        fontSize: 16\n                    }\n                }\n            },\n            {\n                scale: true,\n                gridIndex: 1,\n                splitNumber: 2,\n                axisLabel: { show: false },\n                axisLine: { show: false, lineStyle: { color: '#000' } },\n                axisTick: { show: false },\n                splitLine: { show: false },\n            }\n            ],\n            dataZoom: [\n                {\n                    type: 'inside',\n                    start: 0,\n                    end: 100\n                },\n                {\n                    show: true,\n                    type: 'slider',\n                    bottom: '2%',\n                    start: 0,\n                    end: 100,\n                    textStyle: {\n                        color: '#8392A5'\n                    },\n                    handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                    handleSize: '80%',\n                    dataBackground: {\n                        areaStyle: {\n                            color: '#8392A5'\n                        },\n                        lineStyle: {\n                            opacity: 0.8,\n                            color: '#8392A5'\n                        }\n                    },\n                    handleStyle: {\n                        color: '#fff',\n                        shadowBlur: 3,\n                        shadowColor: 'rgba(0, 0, 0, 0.6)',\n                        shadowOffsetX: 2,\n                        shadowOffsetY: 2\n                    }\n                }\n            ],\n            series: [\n                {\n                    name: 'Day',\n                    type: 'candlestick',\n                    data: this.data.values,\n                    itemStyle: {\n                        color: upColor,\n                        color0: downColor,\n                        borderColor: upBorderColor,\n                        borderColor0: downBorderColor\n                    },\n                    markPoint:\n                    {\n                        label: {\n                            normal: {\n                                formatter: function (param) {\n                                    if (typeof (param) === 'number') {\n                                        return param != null ? Math.round(param.value) : '';\n                                    }\n                                }\n                            }\n                        },\n                        data: [\n                            {\n                                name: 'highest value',\n                                type: 'max',\n                                valueDim: 'highest',\n                                symbolOffset: [0, -20]\n                            },\n                            {\n                                name: 'lowest value',\n                                type: 'min',\n                                valueDim: 'lowest',\n                                symbolOffset: [0, -20]\n                            },\n                            {\n                                name: 'average value on close',\n                                type: 'average',\n                                valueDim: 'close',\n                                symbolOffset: [0, -20]\n                            }\n                        ],\n                        tooltip: {\n                            formatter: ((param) => param.name + '<br>' + (param.data.coord || ''))\n                        }\n                    },\n                    markLine: {\n                        symbol: ['none', 'none'],\n                        lineStyle: {\n                            color: downColor\n                        },\n                        data: [\n                            [\n                                {\n                                    name: 'from lowest to highest',\n                                    type: 'min',\n                                    valueDim: 'lowest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                },\n                                {\n                                    type: 'max',\n                                    valueDim: 'highest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                }\n                            ],\n                            {\n                                name: 'min line on close',\n                                type: 'min',\n                                valueDim: 'close'\n                            },\n                            {\n                                name: 'max line on close',\n                                type: 'max',\n                                valueDim: 'close'\n                            }\n                        ]\n                    }\n                },\n                {\n                    name: 'MA5',\n                    type: 'line',\n                    data: this.calculateMA(5),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#0000FF'\n                    }\n                },\n                {\n                    name: 'MA10',\n                    type: 'line',\n                    data: this.calculateMA(10),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#FFAE19',\n                    }\n                },\n                {\n                    name: 'MA20',\n                    type: 'line',\n                    data: this.calculateMA(20),\n                    smooth: true,\n                    lineStyle: {\n                        opacity: 0.5\n                    },\n                    itemStyle: {\n                        color: '#FF00FF',\n                    }\n                },\n                // {\n                //     name: 'MA30',\n                //     type: 'line',\n                //     data: this.calculateMA(30),\n                //     smooth: true,\n                //     lineStyle: {\n                //         opacity: 0.5\n                //     }\n                // },\n                {\n                    name: 'Volume',\n                    type: 'bar',\n                    xAxisIndex: 1,\n                    yAxisIndex: 1,\n                    data: this.data.volumes\n                }\n\n            ]\n        };\n\n        // handle mark point for BUY/SELL from ARK\n        const filteredArkData = arkData.filter(x => x.Ticker === this.props.title);\n        if (!filteredArkData || filteredArkData.length === 0) {\n            return option;\n        }\n\n        const groupMap = _.groupBy(filteredArkData, 'Date');\n        for (let date in groupMap) {\n            const dataArrayInDate = groupMap[date];\n            const dataInProps = this.props.data.find(m => m[0] === dataArrayInDate[0].Date);\n            if (!(dataInProps && dataInProps[4])) {\n                continue;\n            }\n\n            const buyCount = dataArrayInDate.filter(x => x.Direction === 'Buy').length;\n            const sellCount = dataArrayInDate.length - buyCount;\n\n            if (buyCount === 0 || sellCount === 0) {\n                let pointText = '';\n                if (buyCount === 0) {\n                    pointText = sellCount === 1\n                        ? `${dataArrayInDate[0].Direction}`\n                        : `Sell\\nX${sellCount}`;\n                } else if (sellCount === 0) {\n                    pointText = buyCount === 1\n                        ? `${dataArrayInDate[0].Direction}`\n                        : `Buy\\nX${buyCount}`;\n                }\n\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} ${dataArrayInDate[0].Direction}`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: pointText,\n                    itemStyle: {\n                        color: buyCount === 0\n                            ? '#FF5000'\n                            : '#00C805'\n                    }\n                })\n            } else {\n                // have buyCount > 0 and sellCount > 0\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} Buy`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: `Buy\\nX${buyCount}`,\n                    itemStyle: {\n                        color: '#00C805'\n                    }\n                })\n\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} Sell`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4] * 1.1],\n                    value: `Sell\\n${sellCount}`,\n                    itemStyle: {\n                        color: '#FF5000'\n                    }\n                })\n            }\n        }\n        return option;\n    }\n\n    render() {\n        let subComponent;\n        if (this.props.data.length > 0) {\n            const sixtyDaysPercentage = this.props.data[this.props.data.length - 1][2] / this.props.data[0][2] - 1;\n            const thirtyDaysPercentage = this.props.data[this.props.data.length - 1][2] / this.props.data[Math.round((this.props.data.length - 1) / 2)][2] - 1;\n                    \n            let sixtyPerf = (sixtyDaysPercentage < 0 ? \"\" : \"+\") + (sixtyDaysPercentage * 100).toFixed(2) + '%'\n            let thirtyPerf = (thirtyDaysPercentage < 0 ? \"\" : \"+\") + (thirtyDaysPercentage * 100).toFixed(2) + '%'\n\n            subComponent =\n                <div>\n                    <div className=\"highlights\">\n                        <p>Last 30 days performance: {thirtyPerf}</p>\n                        <p>Last 60 days performance: {sixtyPerf}</p>\n                    </div>\n                    <ReactEcharts\n                        option={this.getOption()}\n                        notMerge={true}\n                        lazyUpdate={true}\n                        style={{ height: '500px', width: '100%' }}\n                    />\n                </div>\n        } else {\n            subComponent =\n                <div className=\"chart-placeholder\">\n                    <p>\n                        Search Any Ticker/Tap Any Card/Tap Any Row\n                        <br></br>\n                        Candlestick Chart Will Display Below\n                    </p>\n                    <svg width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-double-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M1.646 6.646a.5.5 0 0 1 .708 0L8 12.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                        <path d=\"M1.646 2.646a.5.5 0 0 1 .708 0L8 8.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                    </svg>\n                </div>\n        }\n\n        return (\n            <div>\n                {subComponent}\n            </div>\n        )\n    }\n}\n\nexport default StockFigure;","import React from 'react';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport packageJson from '../package.json';\nimport './layout.scss';\nimport { tickerService, daysRangeService } from './services/generic-service';\n\nimport Header from './components/header/header';\nimport MostActiveStocksTabs from './components/most-active-stocks-tabs/most-active-stocks-tabs';\nimport DataGrid from './components/data-grid/data-grid';\nimport StockFigure from './components/stock-figure/stock-figure';\n\nlet arkData = require('./rawData/mergedData.json');\n\nclass Layout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: ['most-active-stock-panel', 'candlestick-chart-panel'],\n            daysRange: 30,\n            inputTicker: '',\n            massagedData: [],\n            figureTitle: '',\n            isInputing: false\n        };\n\n        this.handlePanelChange = this.handlePanelChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ inputTicker: ticker });\n                this.getCandleData(ticker);\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n\n        this.daysRangeSubscription = daysRangeService.getDaysRange().subscribe(daysRange => {\n            if (daysRange) {\n                this.setState({ daysRange: daysRange });\n            } else {\n                this.setState({ daysRange: 30 });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n        this.daysRangeSubscription.unsubscribe();\n    }\n\n    getCandleData(ticker) {\n        let that = this;\n        let endDate = new Date().setHours(0, 0, 0, 0) / 1000;\n        let startDate = endDate - 60 * 24 * 60 * 60;\n        let getCandleUrl = 'https://finnhub.io/api/v1/stock/candle?';\n\n        const apiParams = {\n            symbol: ticker,\n            resolution: 'D',\n            from: startDate,\n            to: endDate,\n            token: 'bti26hf48v6uv69lirj0'\n        };\n        let paramsArray = [];\n        for (let prop in apiParams) {\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\n        }\n        getCandleUrl = getCandleUrl + paramsArray.join('&');\n\n        fetch(getCandleUrl, {\n            method: 'GET'\n        })\n            .then(response => response.json())\n            .then((data) => {\n                if (data && data.s === 'ok') {\n                    let massaged = [];\n                    for (let i = 0; i < data.t.length; i++) {\n                        let row = [];\n                        row.push(\n                            new Date(data.t[i] * 1000).toISOString()\n                                .split(\"T\")[0],\n                            Math.round(data.o[i] * 100) / 100,\n                            Math.round(data.c[i] * 100) / 100,\n                            Math.round(data.l[i] * 100) / 100,\n                            Math.round(data.h[i] * 100) / 100,\n                            data.v[i],\n                        )\n                        massaged.push(row);\n                    }\n\n                    that.setState({ figureTitle: ticker });\n                    that.setState({ massagedData: massaged });\n                }\n            })\n            .catch(error => this.setState({ error }));\n    }\n\n    handlePanelChange(panel) {\n        return (event, isExpanded) => {\n            const panelArr = this.state.expanded;\n            if (isExpanded) {\n                panelArr.push(panel)\n            } else {\n                const index = panelArr.indexOf(panel);\n                if (index > -1) {\n                    panelArr.splice(index, 1);\n                }\n            }\n            this.setState({ expanded: panelArr })\n        }\n    };\n\n    handleClickDaysRange(event) {\n        event.stopPropagation();\n    }\n\n    handleSelectDaysRange(event) {\n        daysRangeService.changeDaysRange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"layout-wrapper\">\n                <div className=\"header-wrapper\">\n                    <Header />\n                </div>\n                <div className=\"accordion-wrapper\">\n                    <Accordion expanded={this.state.expanded.includes('most-active-stock-panel')} onChange={this.handlePanelChange('most-active-stock-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"most-active-stock-panel-content\"\n                            id=\"most-active-stock-panel-header\">\n                            <Typography className=\"accordion-heading\">Most Active Stocks</Typography>\n                            <Typography className=\"accordion-second-heading\" component={'span'}>\n                                Top 5 Most Active Stocks ARK Trades in \n                                <FormControl className=\"days-dropdown\">\n                                    <Select\n                                        labelId=\"demo-simple-select-placeholder-label-label\"\n                                        id=\"demo-simple-select-placeholder-label\"\n                                        value={this.state.daysRange}\n                                        onClick={this.handleClickDaysRange.bind(this)}\n                                        onChange={this.handleSelectDaysRange.bind(this)}\n                                        MenuProps={{ disableScrollLock: true }}\n                                    >\n                                        <MenuItem value={5}>5</MenuItem>\n                                        <MenuItem value={10}>10</MenuItem>\n                                        <MenuItem value={20}>20</MenuItem>\n                                        <MenuItem value={30}>30</MenuItem>\n                                        <MenuItem value={60}>60</MenuItem>\n                                        <MenuItem value={10000}>All</MenuItem>\n                                    </Select>\n                                </FormControl> days.\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className=\"most-active-stocks-tabs-wrapper\">\n                                <MostActiveStocksTabs />\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                    <Accordion expanded={this.state.expanded.includes('data-grid-panel')} onChange={this.handlePanelChange('data-grid-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"data-grid-panel-content\"\n                            id=\"data-grid-panel-header\">\n                            <Typography className=\"accordion-heading\">Transactions Table</Typography>\n                            <Typography className=\"accordion-second-heading\">Includes All ARK Trades from Aug 18th, 2020</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <DataGrid />\n                        </AccordionDetails>\n                    </Accordion>\n                    <Accordion expanded={this.state.expanded.includes('candlestick-chart-panel')} onChange={this.handlePanelChange('candlestick-chart-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"candlestick-chart-panel-content\"\n                            id=\"candlestick-chart-panel-header\">\n                            <Typography className=\"accordion-heading\">Candlestick Chart</Typography>\n                            <Typography className=\"accordion-second-heading\">60 Days Candlestick Chart with ARK Trade Points</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className=\"stock-figure-wrapper\">\n                                <StockFigure title={this.state.figureTitle.toUpperCase()} data={this.state.massagedData} />\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n\n                <div className='info-container'>\n                    <p className='info-version'>Version: {packageJson.version}</p>\n                    <p className='info-update-date'>Last Update Date: {arkData[0]['Date']}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Layout from './layout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}